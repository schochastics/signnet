[{"path":[]},{"path":"https://schochastics.github.io/signnet/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://schochastics.github.io/signnet/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://schochastics.github.io/signnet/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://schochastics.github.io/signnet/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://schochastics.github.io/signnet/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement david@schochastics.net. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://schochastics.github.io/signnet/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://schochastics.github.io/signnet/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://schochastics.github.io/signnet/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://schochastics.github.io/signnet/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://schochastics.github.io/signnet/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://schochastics.github.io/signnet/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired [Mozilla’s code conduct enforcement ladder][https://github.com/mozilla/inclusion]. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://schochastics.github.io/signnet/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to signnet","title":"Contributing to signnet","text":"outlines propose change signnet. detailed info contributing , tidyverse packages, please see development contributing guide.","code":""},{"path":"https://schochastics.github.io/signnet/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to signnet","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"https://schochastics.github.io/signnet/CONTRIBUTING.html","id":"bigger-changes","dir":"","previous_headings":"","what":"Bigger changes","title":"Contributing to signnet","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed).","code":""},{"path":"https://schochastics.github.io/signnet/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to signnet","text":"Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"schochastics/signnet\", fork = TRUE). Install development dependencies devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. user-facing changes, add bullet top NEWS.md (.e. just first header). Follow style described https://style.tidyverse.org/news.html.","code":""},{"path":"https://schochastics.github.io/signnet/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to signnet","text":"New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"https://schochastics.github.io/signnet/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to signnet","text":"Please note signnet project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://schochastics.github.io/signnet/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 signnet authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://schochastics.github.io/signnet/articles/blockmodeling.html","id":"traditional-blockmodeling","dir":"Articles","previous_headings":"","what":"Traditional Blockmodeling","title":"Blockmodeling","text":"signed blockmodeling, goal determine k blocks nodes intra-block edges positive inter-block edges negative. example , construct network perfect block structure sample_islands_signed(). network consists 10 blocks 10 vertices , block density 1 (positive edges). function signed_blockmodel() used construct blockmodel. parameter k number desired blocks. alpha trade-parameter. function minimizes P(C)=αN+(1−α)PP(C)=\\alpha N+(1-\\alpha)P, NN total number negative ties within blocks PP total number positive ties blocks. function returns list two entries. block membership nodes value P(C)P(C). function ggblock() can used plot outcome blockmodel (ggplot2 required).  parameter annealing set TRUE, simulated annealing used optimization step. generally leads better results longer runtimes.","code":"g <- sample_islands_signed(10,10,1,20) clu <- signed_blockmodel(g,k = 10,alpha = 0.5) table(clu$membership) #>  #>  1  2  3  4  5  6  7  8  9 10  #> 10 10 10 10 10 10 10 10 10 10 clu$criterion #> [1] 0 ggblock(g,clu$membership,show_blocks = TRUE) data(\"tribes\") set.seed(44) #for reproducibility  signed_blockmodel(tribes,k = 3,alpha=0.5,annealing = TRUE) #> $membership #>  [1] 1 1 2 2 3 2 2 2 3 3 2 2 3 3 1 1 #>  #> $criterion #> [1] 2 signed_blockmodel(tribes,k = 3,alpha=0.5,annealing = FALSE) #> $membership #>  [1] 1 1 2 2 3 2 2 2 3 3 2 2 3 3 1 1 #>  #> $criterion #> [1] 2"},{"path":"https://schochastics.github.io/signnet/articles/blockmodeling.html","id":"generalized-blockmodeling","dir":"Articles","previous_headings":"","what":"Generalized Blockmodeling","title":"Blockmodeling","text":"function signed_blockmodel() able provide blockmodel diagonal blocks positive -diagonal blocks negative. function signed_blockmodel_general() can used specify different block structures. example, construct network contains three blocks. Two positive one negative intra-group ties. inter-group edges negative group one two, one three. group two three, edges positive. parameter blockmat used specify desired block structure.","code":"g1 <- g2 <- g3 <- graph.full(5)  V(g1)$name <- as.character(1:5) V(g2)$name <- as.character(6:10) V(g3)$name <- as.character(11:15)  g <- Reduce(\"%u%\",list(g1,g2,g3)) E(g)$sign <- 1 E(g)$sign[1:10] <- -1 g <- add.edges(g,c(rbind(1:5,6:10)),attr = list(sign=-1)) g <- add.edges(g,c(rbind(1:5,11:15)),attr = list(sign=-1)) g <- add.edges(g,c(rbind(11:15,6:10)),attr = list(sign=1)) set.seed(424) #for reproducibility blockmat <- matrix(c(1,-1,-1,-1,1,1,-1,1,-1),3,3,byrow = TRUE) blockmat #>      [,1] [,2] [,3] #> [1,]    1   -1   -1 #> [2,]   -1    1    1 #> [3,]   -1    1   -1  general <- signed_blockmodel_general(g,blockmat,alpha = 0.5) traditional <- signed_blockmodel(g,k = 3,alpha = 0.5,annealing = TRUE)  c(general$criterion,traditional$criterion) #> [1] 0 6"},{"path":"https://schochastics.github.io/signnet/articles/blockmodeling.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Blockmodeling","text":"Doreian, Patrick, Andrej Mrvar. 1996. “Partitioning Approach Structural Balance.” Social Networks 18 (2): 149–68. Doreian, Patrick, Andrej Mrvar. 2009. “Partitioning Signed Social Networks.” Social Networks 31 (1): 1–11. Doreian, Patrick, Andrej Mrvar. 2015. “Structural Balance Signed International Relations.” Journal Social Structure 16: 1.","code":""},{"path":"https://schochastics.github.io/signnet/articles/centrality.html","id":"centrality-indices-for-signed-networks","dir":"Articles","previous_headings":"","what":"Centrality indices for signed networks","title":"Centrality","text":"exist dozens indices networks positive ties, signed networks rather scarce. package implements three indices far. Versions degree eigenvector centrality, PN centrality Everett & Borgatti. Degree centrality can calculated four different ways degree_signed(), specified type parameter: type=\"pos\" count positive neighbors type=\"neg\" count negative neighbors type=\"ratio\" positive neighbors/(positive neighbors+negative neighbors) type=\"net\" positive neighbors-negative neighbors mode parameter can used get “” “” versions directed networks. PN index similar Katz status Hubbell’s measure networks positive ties. technical details can found paper Everett & Borgatti. example illustrates indices network signed degree can distinguish vertices. Note PN centrality eigenvector centrality differ significantly network.","code":"A <- matrix(c(0,  1,  0,  1,  0,  0,  0, -1, -1,  0,                  1,  0,  1, -1,  1, -1, -1,  0,  0,  0,                  0,  1,  0,  1, -1,  0,  0,  0, -1,  0,                  1, -1,  1,  0,  1, -1, -1,  0,  0,  0,                  0,  1, -1,  1,  0,  1,  0, -1,  0, -1,                  0, -1,  0, -1,  1,  0,  1,  0,  1, -1,                  0, -1,  0, -1,  0,  1,  0,  1, -1,  1,                 -1,  0,  0,  0, -1,  0,  1,  0,  1,  0,                 -1,  0, -1,  0,  0,  1, -1,  1,  0,  1,                  0,  0,  0,  0, -1, -1,  1,  0,  1,  0),10,10)  g <- graph_from_adjacency_matrix(A,\"undirected\",weighted = \"sign\")  degree_signed(g,type=\"ratio\") #>  [1] 0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5 eigen_centrality_signed(g) #>  [1] 0.62214960 1.00000000 0.74518850 1.00000000 0.89990041 0.64289592 #>  [7] 0.35828159 0.37471921 0.28087411 0.07834568 pn_index(g) #>  [1] 0.9009747 0.8613482 0.9076997 0.8613482 0.8410658 0.8496558 0.8617321 #>  [8] 0.9015909 0.8509848 0.9072930 cor(eigen_centrality_signed(g),pn_index(g),method = \"kendall\") #> [1] -0.2"},{"path":"https://schochastics.github.io/signnet/articles/centrality.html","id":"a-note-on-eigenvector-centrality","dir":"Articles","previous_headings":"","what":"A note on eigenvector centrality","title":"Centrality","text":"adjacency matrix signed network may dominant eigenvalue. means clear eigenvector used. addition possible adjacency matrix repeated eigenvalues hence multiple linearly independent eigenvectors. case certain centralities can arbitrarily assigned. eigen_centrality_signed() function returns error case.","code":"A <- matrix(c( 0,  1,  1, -1,  0,  0, -1,  0,  0,                 1,  0,  1,  0, -1,  0,  0, -1,  0,                 1,  1,  0,  0,  0, -1,  0,  0, -1,                -1,  0,  0,  0,  1,  1, -1,  0,  0,                 0, -1,  0,  1,  0,  1,  0, -1,  0,                 0,  0, -1,  1,  1,  0,  0,  0, -1,                -1,  0,  0, -1,  0,  0,  0,  1,  1,                 0, -1,  0,  0, -1,  0,  1,  0,  1,                 0,  0, -1,  0,  0, -1,  1,  1, 0), 9, 9)  g <- igraph::graph_from_adjacency_matrix(A,\"undirected\",weighted = \"sign\") eigen_centrality_signed(g) #> Error in eigen_centrality_signed(g): no dominant eigenvalue exists"},{"path":"https://schochastics.github.io/signnet/articles/centrality.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Centrality","text":"Everett, Martin G., Stephen P. Borgatti. 2014. “Networks Containing Negative Ties.” Social Networks 38: 111–20. Bonacich, Phillip, Paulette Lloyd. 2004. “Calculating Status Negative Relations.” Social Networks 26 (4): 331–38.","code":""},{"path":"https://schochastics.github.io/signnet/articles/complex_matrices.html","id":"representing-networks-with-ambivalent-ties","dir":"Articles","previous_headings":"","what":"Representing networks with ambivalent ties","title":"Complex Matrices","text":"vignette signed two-mode network introduces third type tie signed networks, ambivalent tie. Ambivalent ties add new level complexity analytic tasks (especially involving matrices) since clear value assign . Intuitively “somewhere” positive negative tie zero already taken null tie. can construct kind adjacency matrix character values, can’t really work characters analytically. complex matrices come . Instead thinking edge values one dimension, can add second one negative ties. , positive tie coded (1,0)(1,0) negative one (0,1)(0,1). much easier case include ambivalent ties assigning (0.5,0.5)(0.5,0.5) . Tuples like can also written complex number, .e. (1,0)(1,0) turns 1+0i1+0i, (0,1)(0,1) 0+1i0+1i, (0.5,0.5)(0.5,0.5) 0.5+0.5i0.5+0.5i. Complex numbers may scary , kind intuitive interpretation . real part positive value edge imaginary part negative part. actually also something like 0.3+0.7i0.3+0.7i edge 30% positive 70% negative. now, though, three values suffice. function as_adj_complex() can used return complex adjacency matrix signed network ambivalent ties. complex adjacency matrix, also complex Laplacian matrix. matrix can obtained laplacian_matrix_complex().","code":"# construct network el <- matrix(c(1, \"a\", 1, \"b\", 1, \"c\", 2, \"a\", 2, \"b\"), ncol = 2, byrow = TRUE) g <- graph_from_edgelist(el, directed = FALSE) E(g)$sign <- c(1, 1, -1, 1, -1) V(g)$type <- c(FALSE, TRUE, TRUE, TRUE, FALSE)  # vertex duplication gu <- as_unsigned_2mode(g, primary = TRUE)  # project and binarize pu <- bipartite_projection(gu, which = \"true\") pu <- delete_edge_attr(pu, \"weight\")  # vertex contraction ps <- as_signed_proj(pu) igraph::as_data_frame(ps, \"edges\") #>   from to type #> 1    a  b    A #> 2    a  c    N #> 3    b  c    N as_adj_complex(ps, attr = \"type\") #>          a        b    c #> a 0.0+0.0i 0.5+0.5i 0+1i #> b 0.5-0.5i 0.0+0.0i 0+1i #> c 0.0-1.0i 0.0-1.0i 0+0i laplacian_matrix_complex(ps, attr = \"type\") #>                a              b    c #> a  1.707107+0.0i -0.500000-0.5i 0-1i #> b -0.500000+0.5i  1.707107+0.0i 0-1i #> c  0.000000+1.0i  0.000000+1.0i 2+0i"},{"path":"https://schochastics.github.io/signnet/articles/complex_matrices.html","id":"functions-supporting-ambivalent-ties","dir":"Articles","previous_headings":"","what":"Functions supporting ambivalent ties","title":"Complex Matrices","text":"far, triangle routines support networks ambivalent ties.","code":"g <- graph.full(5) E(g)$type <- c(rep(\"P\", 3), rep(\"N\", 3), rep(\"A\", 4))  count_complex_triangles(g, attr = \"type\") #> PPP PPN PNN NNN PPA PNA NNA PAA NAA AAA  #>   0   2   0   0   1   3   1   0   2   1"},{"path":"https://schochastics.github.io/signnet/articles/signed_2mode.html","id":"projections","dir":"Articles","previous_headings":"","what":"Projections","title":"Signed Two-Mode Networks","text":"common analytic tool two-mode networks project network onto relevant mode. easily done using adjacency matrix AA. AATAA^T yields row projection ATAA^TA column projection. resulting networks thus weighted. Several methods exist turn weighted projection unweighted network significant edges included. number methods implemented backbone package. Projecting signed networks, however, straightforward. Consider following simple example.  use regular projection rules obtain row projection suggests relation 1 2, fact negative path (via b) positive path (via ) . holds column projection nodes b. paper Schoch introduces two projection methods circumvent “nullification”. package implements duplication approach since plays well existing binarization tools. first stepp turn signed two-mode network unsigned one. done duplicating vertices primary mode (.e. one project ). example, vertex turns two vertices “-pos” “-neg”. vertices secondary mode connect new vertices depending sign edge. instance, 1 positive edge thus 1 connects -pos. can done whole network function as_unsigned_2mode() specifying primary mode (either TRUE FALSE). Now, binarization toll (e.g. backbone package) can applied since network unsigned two-mode network. illustration, include edges weight greater one (“universal” approach) since can done without backbone package. binarization, network turned back unsigned network using contraction rule. contraction rule works follows. edge (-pos,b-pos) (-neg,b-neg) projection positive edge (,b) signed projection. edge (-pos,b-neg) (-neg,b-pos) projection negative edge (,b) signed projection. edge (-pos,b-pos) (-neg,b-pos) (, e.g., (-neg,b-neg) (-pos,b-neg)) projection ambivalent edge (,b) signed projection. done function as_signed_proj(). projection signed two-mode network thus may contain three types edges (positive (“P”), negative (“N”) ambivalent (“”)). concept ambivalent ties comes work Abelson & Rosenberg Cartwright & Harary. technical details can found original paper Schoch. Consult vignette complex matrices learn analyzing signed networks ambivalent ties.","code":"el <- matrix(c(1,\"a\",1,\"b\",1,\"c\",2,\"a\",2,\"b\"),ncol = 2,byrow = TRUE) g <- graph_from_edgelist(el,directed = FALSE) E(g)$sign <- c(1,1,-1,1,-1) V(g)$type <- c(FALSE,TRUE,TRUE,TRUE,FALSE) A <- as_incidence_signed(g) R <- A%*%t(A) C <- t(A)%*%A R #>   1 2 #> 1 3 0 #> 2 0 2 C #>    a  b  c #> a  2  0 -1 #> b  0  2 -1 #> c -1 -1  1 gu <- as_unsigned_2mode(g,primary = TRUE) gu #> IGRAPH 7d5ddf5 UN-B 8 5 --  #> + attr: name (v/c), type (v/l) #> + edges from 7d5ddf5 (vertex names): #> [1] a-pos--1 b-pos--1 c-neg--1 a-pos--2 b-neg--2 pu <- bipartite_projection(gu,which = \"true\") pu <- delete_edge_attr(pu,\"weight\") pu #> IGRAPH f41a722 UN-- 6 4 --  #> + attr: name (v/c) #> + edges from f41a722 (vertex names): #> [1] a-pos--b-pos a-pos--c-neg a-pos--b-neg b-pos--c-neg ps <- as_signed_proj(pu) as_data_frame(ps,\"edges\") #>   from to type #> 1    a  b    A #> 2    a  c    N #> 3    b  c    N"},{"path":"https://schochastics.github.io/signnet/articles/signed_2mode.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Signed Two-Mode Networks","text":"Doreian, Patrick, Paulette Lloyd, Andrej Mrvar. 2013. “Partitioning Large Signed Two-Mode Networks: Problems Prospects.” Social Networks, Special Issue Advances Two-mode Social Networks, 35 (2): 178–203. Schoch, David. 2020. “Projecting Signed Two-Mode Networks” Mathematical Sociology, forthcoming Abelson, Robert P., Milton J. Rosenberg. 1958. “Symbolic Psycho-Logic: Model Attitudinal Cognition.” Behavioral Science 3 (1): 1–13. Cartwright, Dorwin, Frank Harary. 1970. “Ambivalence Indifference Generalizations Structural Balance.” Behavioral Science 15 (6).","code":""},{"path":"https://schochastics.github.io/signnet/articles/signed_networks.html","id":"what-are-signed-networks","dir":"Articles","previous_headings":"","what":"What are signed networks?","title":"Signed Networks","text":"Traditional SNA usually deals relations among entities (e.g. people) positive, including “friendship”, “advice seeking”, etc. network analytic tools devised premise, centrality indices, clustering tools forth. course occurring relations positive. People can friends also foes. gives rise signed networks. networks usually composed , positive negative, ties measured among set entities. Traditional network analytic tools applicable networks without adapting negative ties. signnet package brings together methods developed analyse signed networks. includes Structural balance (vignette) Blockmodeling (vignette) Centrality (vignette) Signed two-mode networks (vignette) Complex matrices (vignette)","code":""},{"path":"https://schochastics.github.io/signnet/articles/signed_networks.html","id":"data-structures-for-signed-networks-in-signnet","dir":"Articles","previous_headings":"","what":"Data structures for signed networks in signnet","title":"Signed Networks","text":"foundation signnet provided igraph. functions package assume igraph object signed network edge attribute “sign” values 1 (positive) -1 (negative). methods () throw error sign attribute missing contains values -1 1. Matrices associated signed network follow igraph naming scheme. signed adjacency matrix can obtained as_adj_signed(). signed Laplacian matrix obtained laplacian_matrix_signed().","code":"g <- graph.full(5,directed = FALSE,loops = FALSE) E(g)$sign <- 1 g #> IGRAPH 34ba6ea U--- 5 10 -- Full graph #> + attr: name (g/c), loops (g/l), sign (e/n) #> + edges from 34ba6ea: #>  [1] 1--2 1--3 1--4 1--5 2--3 2--4 2--5 3--4 3--5 4--5 data(\"tribes\") as_adj_signed(tribes)[1:5,1:5] #>       Gavev Kotun Ove Alika Nagam #> Gavev     0     1  -1    -1    -1 #> Kotun     1     0  -1     0    -1 #> Ove      -1    -1   0     1     0 #> Alika    -1     0   1     0     0 #> Nagam    -1    -1   0     0     0 laplacian_matrix_signed(tribes)[1:5,1:5] #>       Gavev Kotun Ove Alika Nagam #> Gavev     8    -1   1     1     1 #> Kotun    -1     8   1     0     1 #> Ove       1     1   6    -1     0 #> Alika     1     0  -1     3     0 #> Nagam     1     1   0     0     7"},{"path":"https://schochastics.github.io/signnet/articles/signed_networks.html","id":"included-datasets","dir":"Articles","previous_headings":"","what":"Included datasets","title":"Signed Networks","text":"package includes two well known datasets. “tribes” dataset signed social network tribes Gahuku–Gama alliance structure Eastern Central Highlands New Guinea. network contains sixteen tribes connected friendship (“rova”) enmity (“hina”). “cowList” dataset contains list 52 signed networks inter-state relations time (1946-1999). Two countries connected positive tie form alliance peace treaty. negative tie exists countries war kinds conflicts. dataset derrived correlates war.","code":""},{"path":"https://schochastics.github.io/signnet/articles/structural_balance.html","id":"structural-balance","dir":"Articles","previous_headings":"","what":"Structural Balance","title":"Structural Balance","text":"principles underlying structural balance based theory social psychology dating back work Heider 1940s, generalized extended graphs Cartwright Harary 1950s. simplest form, defined via triangles. triangle balanced ties positive (“friend friend friend”) one tie positive (“enemy enemy friend”). remaining configurations said unbalanced.  network balanced .., can partitioned two vertex subsets, intra-group edges positive inter-group edges negative. (random) balanced network can obtained function sample_islands_signed() pretty much sample_islands() igraph package. (function ggsigned() can used visualize signed networks. Note requires package ggraph installed.) Increasing islands.n leads “clusterable” networks defined Davis. balanced network contains balanced triangles. can verified count_signed_triangles(). Note absence ++- --- triangles. list triangles use signed_triangles(). column P indicated number positive ties triangle. value 3 indicates triangle “+++”.","code":"g <- sample_islands_signed(islands.n = 2,islands.size = 10,                            islands.pin = 0.8,n.inter = 5) count_signed_triangles(g) #> +++ ++- +-- ---  #> 160   0   7   0 head(signed_triangles(g)) #>      V1 V2 V3 P #> [1,] 11  2  3 1 #> [2,] 11  2  5 1 #> [3,] 11  5  3 1 #> [4,] 11 10  2 1 #> [5,] 11 10  3 1 #> [6,] 11 10  5 1"},{"path":"https://schochastics.github.io/signnet/articles/structural_balance.html","id":"balancedness","dir":"Articles","previous_headings":"","what":"Balancedness","title":"Structural Balance","text":"Determining network balanced easy, measuring degree balancedness (.e. close network balanced?) . package, far, implements three methods calculate balance scores. defined value one indicates perfect balance zero perfect unbalance. Though intermediate networks, results may vary significantly. Check paper Samin Aref (work) details. “triangles” returns fraction balanced triangles. “walk” based eigenvalues signed underlying unsigned network. Check paper Estrada details. “frustration” assumes network can partitioned two groups, intra group edges positive inter group edges negative. index defined sum intra group negative inter group positive edges. Note problem NP complete upper bound returned (based simulated annealing). function frustration_exact() implements integer program solve exact optimization problem. details can found work Aref. disagreement non-balanced networks can seen included “tribes” dataset.","code":"balance_score(g, method = \"triangles\") #> [1] 1 balance_score(g, method = \"walk\") #> [1] 1 balance_score(g, method = \"frustration\") #> [1] 0.816092 data(\"tribes\") balance_score(tribes, method = \"triangles\") #> [1] 0.8676471 balance_score(tribes, method = \"walk\") #> [1] 0.3575761 balance_score(tribes, method = \"frustration\") #> [1] 0.7586207"},{"path":"https://schochastics.github.io/signnet/articles/structural_balance.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Structural Balance","text":"Heider, Fritz. 1946. “Attitudes Cognitive Organization.” Journal Psychology 21 (1): 107–12. Cartwright, Dorwin, Frank Harary. 1956. “Structural Balance: Generalization Heider’s Theory.” Psychological Review 63 (5): 277. Davis, James . 1967. “Clustering Structural Balance Graphs.” Human Relations 20 (2): 181–87. Aref, Samin, Mark C. Wilson. 2018. “Measuring Partial Balance Signed Networks.” Journal Complex Networks 6 (4): 566–95. Estrada, Ernesto. 2019. “Rethinking Structural Balance Signed Social Networks.” Discrete Applied Mathematics","code":""},{"path":"https://schochastics.github.io/signnet/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"David Schoch. Author, maintainer.","code":""},{"path":"https://schochastics.github.io/signnet/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Schoch, D., (2023). signnet: R package analyzing signed networks. Journal Open Source Software, 8(81), 4987, https://doi.org/10.21105/joss.04987","code":"@Article{,   doi = {10.21105/joss.04987},   url = {https://doi.org/10.21105/joss.04987},   year = {2023},   publisher = {The Open Journal},   volume = {8},   number = {81},   pages = {4987},   author = {David Schoch},   title = {signnet: An R package for analyzing signed networks},   journal = {Journal of Open Source Software}, }"},{"path":"https://schochastics.github.io/signnet/index.html","id":"signnet-","dir":"","previous_headings":"","what":"Methods to Analyse Signed Networks","title":"Methods to Analyse Signed Networks","text":"package provides methods analyse signed networks (.e. networks positive negative ties).","code":""},{"path":"https://schochastics.github.io/signnet/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Methods to Analyse Signed Networks","text":"can install released version signnet CRAN : development version available :","code":"install.packages(\"signnet\") # install.packages(\"devtools\") devtools::install_github(\"schochastics/signnet\")"},{"path":"https://schochastics.github.io/signnet/index.html","id":"structural-balance-and-triads","dir":"","previous_headings":"","what":"Structural Balance and Triads","title":"Methods to Analyse Signed Networks","text":"principles underlying structural balance based theory social psychology dating back work Heider 1940s, generalized extended graphs Cartwright Harary 1950s. simplest form, defined via triangles. triangle balanced ties positive (“friend friend friend”) one tie positive (“enemy enemy friend”). remaining configurations said unbalanced.  network balanced .., can partitioned two vertex subsets, intra-group edges positive inter-group edges negative. Determining easy, measuring degree balancedness (.e. close network balanced?) . package, far, implements three methods calculate balance scores. defined value one indicates perfect balance zero perfect unbalance. Though intermediate networks, results may vary significantly. Check paper Samin Aref (work) details. directed signed networks, triad_census_signed() can used compute count 138 non-isomorphic signed triads. (code reproduce figure can found gist)","code":"library(igraph) library(signnet) data(\"tribes\")  balance_score(tribes, method = \"triangles\") #> [1] 0.867647 balance_score(tribes, method = \"walk\") #> [1] 0.357576 balance_score(tribes, method = \"frustration\") #> [1] 0.758621"},{"path":"https://schochastics.github.io/signnet/index.html","id":"blockmodeling","dir":"","previous_headings":"","what":"Blockmodeling","title":"Methods to Analyse Signed Networks","text":"package implements two different blockmodeling algorithms. classic one tries partition network specified set groups intra group edges positive inter group edges negative. parameter k number groups alpha specifies penalty negative inter group positive intra group edges. alpha = 0 (alpha = 1) positive inter group (negative intra group) edges penalized. Set alpha = 0.5 equal penalization algorithm exact just heuristic. annealing = TRUE, simulated annealing used. improves result, may take additional time. result blockmodel can visualized ggblock (requires ggplot2)  second blockmodeling technique known generalized blockmodeling. method removes restriction positve (negative) inter (intra) group edges. Instead, blockmatrix passed function desired block structure. example illustrates technique network composed three groups differing inter/intra group edge patterns.","code":"clu <- signed_blockmodel(tribes, k = 3, alpha = 0.5, annealing = TRUE) clu #> $membership #>  [1] 1 1 3 3 2 3 3 3 2 2 3 3 2 2 1 1 #>  #> $criterion #> [1] 2 ggblock(tribes, clu$membership, show_blocks = TRUE, show_labels = TRUE) # create a signed network with three groups and different inter/intra group ties g1 <- g2 <- g3 <- graph.full(5)  V(g1)$name <- as.character(1:5) V(g2)$name <- as.character(6:10) V(g3)$name <- as.character(11:15)  g <- Reduce(\"%u%\", list(g1, g2, g3)) E(g)$sign <- 1 E(g)$sign[1:10] <- -1 g <- add.edges(g, c(rbind(1:5, 6:10)), attr = list(sign = -1)) g <- add.edges(g, c(rbind(1:5, 11:15)), attr = list(sign = -1)) g <- add.edges(g, c(rbind(11:15, 6:10)), attr = list(sign = 1))  # specify the link patterns between groups blockmat <- matrix(c(1, -1, -1, -1, 1, 1, -1, 1, -1), 3, 3, byrow = TRUE) blockmat #>      [,1] [,2] [,3] #> [1,]    1   -1   -1 #> [2,]   -1    1    1 #> [3,]   -1    1   -1  clu <- signed_blockmodel_general(g, blockmat, 0.5) clu #> $membership #>  [1] 1 1 1 1 1 2 2 2 2 2 3 3 3 3 3 #>  #> $criterion #> [1] 0 ggblock(g, clu$membership, show_blocks = TRUE, show_labels = FALSE)"},{"path":[]},{"path":"https://schochastics.github.io/signnet/index.html","id":"where-do-i-report-bugs","dir":"","previous_headings":"","what":"Where do I report bugs?","title":"Methods to Analyse Signed Networks","text":"Simply open issue GitHub.","code":""},{"path":"https://schochastics.github.io/signnet/index.html","id":"how-do-i-contribute-to-the-package","dir":"","previous_headings":"","what":"How do I contribute to the package?","title":"Methods to Analyse Signed Networks","text":"idea (code yet), open issue GitHub. want contribute specific feature code ready, fork repository, add code, create pull request.","code":""},{"path":"https://schochastics.github.io/signnet/index.html","id":"do-you-need-support","dir":"","previous_headings":"","what":"Do you need support?","title":"Methods to Analyse Signed Networks","text":"easiest way open issue - way, question also visible others may face similar problems.","code":""},{"path":"https://schochastics.github.io/signnet/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Methods to Analyse Signed Networks","text":"Please note signnet project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"https://schochastics.github.io/signnet/reference/as_adj_complex.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a signed graph to a complex adjacency matrix — as_adj_complex","title":"Convert a signed graph to a complex adjacency matrix — as_adj_complex","text":"function returns adjacency matrix signed graph contains ambivalent ties","code":""},{"path":"https://schochastics.github.io/signnet/reference/as_adj_complex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a signed graph to a complex adjacency matrix — as_adj_complex","text":"","code":"as_adj_complex(g, attr)"},{"path":"https://schochastics.github.io/signnet/reference/as_adj_complex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a signed graph to a complex adjacency matrix — as_adj_complex","text":"g igraph object attr edge attribute name encodes positive (\"P\"), negative (\"N\") ambivalent (\"\") ties.","code":""},{"path":"https://schochastics.github.io/signnet/reference/as_adj_complex.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a signed graph to a complex adjacency matrix — as_adj_complex","text":"complex adjacency matrix","code":""},{"path":[]},{"path":"https://schochastics.github.io/signnet/reference/as_adj_signed.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a signed graph to a signed adjacency matrix — as_adj_signed","title":"Convert a signed graph to a signed adjacency matrix — as_adj_signed","text":"function returns adjacency matrix signed graph","code":""},{"path":"https://schochastics.github.io/signnet/reference/as_adj_signed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a signed graph to a signed adjacency matrix — as_adj_signed","text":"","code":"as_adj_signed(g, sparse = FALSE)"},{"path":"https://schochastics.github.io/signnet/reference/as_adj_signed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a signed graph to a signed adjacency matrix — as_adj_signed","text":"g igraph object. Must \"sign\" edge attribute. sparse Logical scalar, whether return result sparse matrix. Matrix package required sparse matrices.","code":""},{"path":"https://schochastics.github.io/signnet/reference/as_adj_signed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a signed graph to a signed adjacency matrix — as_adj_signed","text":"signed adjacency matrix","code":""},{"path":[]},{"path":"https://schochastics.github.io/signnet/reference/as_complex_edges.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Signed Network to Complex — as_complex_edges","title":"Convert Signed Network to Complex — as_complex_edges","text":"Convert Signed Network Complex","code":""},{"path":"https://schochastics.github.io/signnet/reference/as_complex_edges.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Signed Network to Complex — as_complex_edges","text":"","code":"as_complex_edges(g, attr = \"type\")"},{"path":"https://schochastics.github.io/signnet/reference/as_complex_edges.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Signed Network to Complex — as_complex_edges","text":"g igraph object. Must \"sign\" edge attribute. attr new edge attribute name encodes positive (\"P\"), negative (\"N\") ambivalent (\"\") ties.","code":""},{"path":"https://schochastics.github.io/signnet/reference/as_complex_edges.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert Signed Network to Complex — as_complex_edges","text":"igraph object","code":""},{"path":"https://schochastics.github.io/signnet/reference/as_complex_edges.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Convert Signed Network to Complex — as_complex_edges","text":"David Schoch","code":""},{"path":"https://schochastics.github.io/signnet/reference/as_complex_edges.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert Signed Network to Complex — as_complex_edges","text":"","code":"g <- sample_islands_signed(2, 10, 1, 10) as_complex_edges(g) #> IGRAPH d1f8b8d U--- 20 110 --  #> + attr: grp (v/c), sign (e/n), type (e/c) #> + edges from d1f8b8d: #>  [1]  1-- 2  1-- 3  1-- 4  1-- 5  1-- 6  1-- 7  1-- 8  1-- 9  1--10  2-- 3 #> [11]  2-- 4  2-- 5  2-- 6  2-- 7  2-- 8  2-- 9  2--10  3-- 4  3-- 5  3-- 6 #> [21]  3-- 7  3-- 8  3-- 9  3--10  4-- 5  4-- 6  4-- 7  4-- 8  4-- 9  4--10 #> [31]  5-- 6  5-- 7  5-- 8  5-- 9  5--10  6-- 7  6-- 8  6-- 9  6--10  7-- 8 #> [41]  7-- 9  7--10  8-- 9  8--10  9--10 11--12 11--13 11--14 11--15 11--16 #> [51] 11--17 11--18 11--19 11--20 12--13 12--14 12--15 12--16 12--17 12--18 #> [61] 12--19 12--20 13--14 13--15 13--16 13--17 13--18 13--19 13--20 14--15 #> [71] 14--16 14--17 14--18 14--19 14--20 15--16 15--17 15--18 15--19 15--20 #> + ... omitted several edges"},{"path":"https://schochastics.github.io/signnet/reference/as_incidence_complex.html","id":null,"dir":"Reference","previous_headings":"","what":"Complex Incidence Matrix — as_incidence_complex","title":"Complex Incidence Matrix — as_incidence_complex","text":"complex incidence matrix signed graph containing ambivalent ties.","code":""},{"path":"https://schochastics.github.io/signnet/reference/as_incidence_complex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Complex Incidence Matrix — as_incidence_complex","text":"","code":"as_incidence_complex(g, attr)"},{"path":"https://schochastics.github.io/signnet/reference/as_incidence_complex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Complex Incidence Matrix — as_incidence_complex","text":"g igraph object. attr edge attribute name encodes positive (\"P\"), negative (\"N\") ambivalent (\"\") ties.","code":""},{"path":"https://schochastics.github.io/signnet/reference/as_incidence_complex.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Complex Incidence Matrix — as_incidence_complex","text":"complex matrix","code":""},{"path":"https://schochastics.github.io/signnet/reference/as_incidence_complex.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Complex Incidence Matrix — as_incidence_complex","text":"function slightly different as_incidence_matrix since defined bipartite graphs. incidence matrix defined \\(S \\C^{n,m}\\), n number vertices m number edges. Edges (,j) oriented <j entries defined $$S_{(,j)}=\\sqrt{A_{ij}}$$ $$S_{j(,j)}=-\\sqrt{A_{ji}} (,j) ambivalent tie$$ $$S_{j(,j)}=-A_{ji}\\sqrt{A_{ji}} else$$","code":""},{"path":[]},{"path":"https://schochastics.github.io/signnet/reference/as_incidence_complex.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Complex Incidence Matrix — as_incidence_complex","text":"David Schoch","code":""},{"path":"https://schochastics.github.io/signnet/reference/as_incidence_signed.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a signed two-mode network to a signed matrix — as_incidence_signed","title":"Convert a signed two-mode network to a signed matrix — as_incidence_signed","text":"function returns incidence matrix signed two-mode network.","code":""},{"path":"https://schochastics.github.io/signnet/reference/as_incidence_signed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a signed two-mode network to a signed matrix — as_incidence_signed","text":"","code":"as_incidence_signed(g, sparse = FALSE)"},{"path":"https://schochastics.github.io/signnet/reference/as_incidence_signed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a signed two-mode network to a signed matrix — as_incidence_signed","text":"g igraph object (bipartite). Must \"sign\" edge attribute. sparse Logical scalar, whether return result sparse matrix. Matrix package required sparse matrices.","code":""},{"path":"https://schochastics.github.io/signnet/reference/as_incidence_signed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a signed two-mode network to a signed matrix — as_incidence_signed","text":"signed incidence matrix","code":""},{"path":"https://schochastics.github.io/signnet/reference/as_signed_proj.html","id":null,"dir":"Reference","previous_headings":"","what":"convert unsigned projection to signed — as_signed_proj","title":"convert unsigned projection to signed — as_signed_proj","text":"convert unsigned projection signed","code":""},{"path":"https://schochastics.github.io/signnet/reference/as_signed_proj.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"convert unsigned projection to signed — as_signed_proj","text":"","code":"as_signed_proj(g)"},{"path":"https://schochastics.github.io/signnet/reference/as_signed_proj.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"convert unsigned projection to signed — as_signed_proj","text":"g igraph object","code":""},{"path":"https://schochastics.github.io/signnet/reference/as_signed_proj.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"convert unsigned projection to signed — as_signed_proj","text":"igraph object","code":""},{"path":[]},{"path":"https://schochastics.github.io/signnet/reference/as_signed_proj.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"convert unsigned projection to signed — as_signed_proj","text":"David Schoch","code":""},{"path":"https://schochastics.github.io/signnet/reference/as_signed_proj.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"convert unsigned projection to signed — as_signed_proj","text":"","code":"library(igraph) #>  #> Attaching package: ‘igraph’ #> The following objects are masked from ‘package:stats’: #>  #>     decompose, spectrum #> The following object is masked from ‘package:base’: #>  #>     union  # create a simple signed two mode network el <- matrix(c(1, \"a\", 1, \"b\", 1, \"c\", 2, \"a\", 2, \"b\"), ncol = 2, byrow = TRUE) g <- graph_from_edgelist(el, directed = FALSE) E(g)$sign <- c(1, 1, -1, 1, -1) V(g)$type <- c(FALSE, TRUE, TRUE, TRUE, FALSE)  # convert to unsigned two-mode network and project l <- as_unsigned_2mode(g, primary = TRUE) p <- bipartite_projection(l, which = \"true\")  # turn the unsigned projection back to a signed network as_signed_proj(p) #> IGRAPH ed29473 UN-- 3 3 --  #> + attr: name (v/c), type (e/c) #> + edges from ed29473 (vertex names): #> [1] a--b a--c b--c"},{"path":"https://schochastics.github.io/signnet/reference/as_unsigned_2mode.html","id":null,"dir":"Reference","previous_headings":"","what":"convert signed two-mode network to unsigned — as_unsigned_2mode","title":"convert signed two-mode network to unsigned — as_unsigned_2mode","text":"convert signed two-mode network unsigned","code":""},{"path":"https://schochastics.github.io/signnet/reference/as_unsigned_2mode.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"convert signed two-mode network to unsigned — as_unsigned_2mode","text":"","code":"as_unsigned_2mode(g, primary = TRUE)"},{"path":"https://schochastics.github.io/signnet/reference/as_unsigned_2mode.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"convert signed two-mode network to unsigned — as_unsigned_2mode","text":"g igraph object. Two-mode network, must \"sign\" edge attribute. primary logical. mode transform","code":""},{"path":"https://schochastics.github.io/signnet/reference/as_unsigned_2mode.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"convert signed two-mode network to unsigned — as_unsigned_2mode","text":"igraph object","code":""},{"path":[]},{"path":"https://schochastics.github.io/signnet/reference/as_unsigned_2mode.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"convert signed two-mode network to unsigned — as_unsigned_2mode","text":"David Schoch","code":""},{"path":"https://schochastics.github.io/signnet/reference/as_unsigned_2mode.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"convert signed two-mode network to unsigned — as_unsigned_2mode","text":"","code":"library(igraph)  # create a simple signed two mode network el <- matrix(c(1, \"a\", 1, \"b\", 1, \"c\", 2, \"a\", 2, \"b\"), ncol = 2, byrow = TRUE) g <- graph_from_edgelist(el, directed = FALSE) E(g)$sign <- c(1, 1, -1, 1, -1) V(g)$type <- c(FALSE, TRUE, TRUE, TRUE, FALSE)  # convert to unsigned two-mode network and project l <- as_unsigned_2mode(g, primary = TRUE) p <- bipartite_projection(l, which = \"true\")  # turn the unsigned projection back to a signed network as_signed_proj(p) #> IGRAPH e682ae0 UN-- 3 3 --  #> + attr: name (v/c), type (e/c) #> + edges from e682ae0 (vertex names): #> [1] a--b a--c b--c"},{"path":"https://schochastics.github.io/signnet/reference/avatar.html","id":null,"dir":"Reference","previous_headings":"","what":"Signed networks from Avatar: The Last Airbender — avatar","title":"Signed networks from Avatar: The Last Airbender — avatar","text":"Allies/Enemy relations Avatar: Last Airbender","code":""},{"path":"https://schochastics.github.io/signnet/reference/avatar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Signed networks from Avatar: The Last Airbender — avatar","text":"","code":"avatar"},{"path":"https://schochastics.github.io/signnet/reference/avatar.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Signed networks from Avatar: The Last Airbender — avatar","text":"igraph object","code":""},{"path":"https://schochastics.github.io/signnet/reference/avatar.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Signed networks from Avatar: The Last Airbender — avatar","text":"scraped Avatar Wiki (https://avatar.fandom.com/wiki/Category:Characters)","code":""},{"path":"https://schochastics.github.io/signnet/reference/balance_score.html","id":null,"dir":"Reference","previous_headings":"","what":"balancedness of signed network — balance_score","title":"balancedness of signed network — balance_score","text":"Implements several indices assess balancedness network.","code":""},{"path":"https://schochastics.github.io/signnet/reference/balance_score.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"balancedness of signed network — balance_score","text":"","code":"balance_score(g, method = \"triangles\")"},{"path":"https://schochastics.github.io/signnet/reference/balance_score.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"balancedness of signed network — balance_score","text":"g igraph object sign edge attribute. method string indicating method used. See details options","code":""},{"path":"https://schochastics.github.io/signnet/reference/balance_score.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"balancedness of signed network — balance_score","text":"numeric balancedness score 0 1","code":""},{"path":"https://schochastics.github.io/signnet/reference/balance_score.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"balancedness of signed network — balance_score","text":"method parameter can one triangles Fraction balanced triangles. Maximal (=1) triangles balanced. walk \\(\\sum exp(\\lambda_i) / \\sum exp(\\mu_i)\\) frustration frustration index assumes network can partitioned two groups, intra group edges positive inter group edges negative. index defined sum intra group negative inter group positive edges. Note problem NP complete upper bound returned (based simulated annealing). Exact methods can found work Aref. index normalized maximal (=1) network balanced.","code":""},{"path":"https://schochastics.github.io/signnet/reference/balance_score.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"balancedness of signed network — balance_score","text":"Estrada, E. (2019). Rethinking structural balance signed social networks. Discrete Applied Mathematics. Samin Aref, Mark C Wilson (2018). Measuring partial balance signed networks. Journal Complex Networks, 6(4): 566–595, https://doi.org/10.1093/comnet/cnx044","code":""},{"path":"https://schochastics.github.io/signnet/reference/balance_score.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"balancedness of signed network — balance_score","text":"David Schoch","code":""},{"path":"https://schochastics.github.io/signnet/reference/balance_score.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"balancedness of signed network — balance_score","text":"","code":"library(igraph) g <- graph.full(4) #> Warning: `graph.full()` was deprecated in igraph 2.1.0. #> ℹ Please use `make_full_graph()` instead. E(g)$sign <- c(-1, 1, 1, -1, -1, 1)  balance_score(g, method = \"triangles\") #> [1] 1 balance_score(g, method = \"walk\") #> [1] 1"},{"path":"https://schochastics.github.io/signnet/reference/complex_walks.html","id":null,"dir":"Reference","previous_headings":"","what":"Count Walks in complex signed network — complex_walks","title":"Count Walks in complex signed network — complex_walks","text":"Count Walks complex signed network","code":""},{"path":"https://schochastics.github.io/signnet/reference/complex_walks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Count Walks in complex signed network — complex_walks","text":"","code":"complex_walks(g, attr, k)"},{"path":"https://schochastics.github.io/signnet/reference/complex_walks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Count Walks in complex signed network — complex_walks","text":"g igraph object. attr edge attribute encodes positive (\"P\"), negative (\"N\") ambivalent (\"\") ties. k integer. length walks","code":""},{"path":"https://schochastics.github.io/signnet/reference/complex_walks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Count Walks in complex signed network — complex_walks","text":"igraph object","code":""},{"path":"https://schochastics.github.io/signnet/reference/complex_walks.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Count Walks in complex signed network — complex_walks","text":"David Schoch","code":""},{"path":"https://schochastics.github.io/signnet/reference/complex_walks.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Count Walks in complex signed network — complex_walks","text":"","code":"g <- sample_islands_signed(2, 10, 1, 10) g <- as_complex_edges(g, attr = \"type\") complex_walks(g, attr = \"type\", k = 3) #>         [,1]   [,2]   [,3]   [,4]   [,5]   [,6]   [,7]   [,8]   [,9]  [,10] #>  [1,] 80+ 0i 93+ 0i 82+ 0i 86+ 0i 84+ 0i 80+ 0i 81+ 0i 78+ 0i 93+ 0i 91+ 0i #>  [2,] 93+ 0i 90+ 0i 84+ 0i 92+ 0i 86+ 0i 88+ 0i 86+ 0i 82+ 0i 94+ 0i 99+ 0i #>  [3,] 82+ 0i 84+ 0i 74+ 0i 84+ 0i 80+ 0i 79+ 0i 77+ 0i 75+ 0i 87+ 0i 87+ 0i #>  [4,] 86+ 0i 92+ 0i 84+ 0i 84+ 0i 83+ 0i 82+ 0i 83+ 0i 80+ 0i 92+ 0i 96+ 0i #>  [5,] 84+ 0i 86+ 0i 80+ 0i 83+ 0i 78+ 0i 81+ 0i 79+ 0i 77+ 0i 86+ 0i 89+ 0i #>  [6,] 80+ 0i 88+ 0i 79+ 0i 82+ 0i 81+ 0i 76+ 0i 78+ 0i 76+ 0i 88+ 0i 88+ 0i #>  [7,] 81+ 0i 86+ 0i 77+ 0i 83+ 0i 79+ 0i 78+ 0i 72+ 0i 74+ 0i 86+ 0i 86+ 0i #>  [8,] 78+ 0i 82+ 0i 75+ 0i 80+ 0i 77+ 0i 76+ 0i 74+ 0i 72+ 0i 82+ 0i 81+ 0i #>  [9,] 93+ 0i 94+ 0i 87+ 0i 92+ 0i 86+ 0i 88+ 0i 86+ 0i 82+ 0i 90+ 0i 96+ 0i #> [10,] 91+ 0i 99+ 0i 87+ 0i 96+ 0i 89+ 0i 88+ 0i 86+ 0i 81+ 0i 96+ 0i 92+ 0i #> [11,]  0+47i  0+56i  0+39i  0+47i  0+40i  0+39i  0+39i  0+32i  0+61i  0+69i #> [12,]  0+60i  0+61i  0+46i  0+60i  0+47i  0+52i  0+46i  0+39i  0+61i  0+68i #> [13,]  0+40i  0+47i  0+32i  0+39i  0+32i  0+32i  0+32i  0+25i  0+48i  0+60i #> [14,]  0+32i  0+39i  0+25i  0+32i  0+25i  0+25i  0+25i  0+18i  0+39i  0+46i #> [15,]  0+54i  0+69i  0+47i  0+55i  0+48i  0+46i  0+46i  0+39i  0+70i  0+77i #> [16,]  0+46i  0+60i  0+44i  0+47i  0+40i  0+39i  0+39i  0+32i  0+55i  0+61i #> [17,]  0+39i  0+46i  0+32i  0+39i  0+32i  0+32i  0+36i  0+25i  0+46i  0+53i #> [18,]  0+61i  0+77i  0+54i  0+68i  0+60i  0+54i  0+53i  0+46i  0+77i  0+77i #> [19,]  0+32i  0+39i  0+25i  0+32i  0+25i  0+25i  0+25i  0+18i  0+39i  0+46i #> [20,]  0+52i  0+54i  0+39i  0+47i  0+39i  0+40i  0+39i  0+32i  0+55i  0+68i #>        [,11]  [,12]  [,13]  [,14]  [,15]  [,16]  [,17]  [,18]  [,19]  [,20] #>  [1,]  0+47i  0+60i  0+40i  0+32i  0+54i  0+46i  0+39i  0+61i  0+32i  0+52i #>  [2,]  0+56i  0+61i  0+47i  0+39i  0+69i  0+60i  0+46i  0+77i  0+39i  0+54i #>  [3,]  0+39i  0+46i  0+32i  0+25i  0+47i  0+44i  0+32i  0+54i  0+25i  0+39i #>  [4,]  0+47i  0+60i  0+39i  0+32i  0+55i  0+47i  0+39i  0+68i  0+32i  0+47i #>  [5,]  0+40i  0+47i  0+32i  0+25i  0+48i  0+40i  0+32i  0+60i  0+25i  0+39i #>  [6,]  0+39i  0+52i  0+32i  0+25i  0+46i  0+39i  0+32i  0+54i  0+25i  0+40i #>  [7,]  0+39i  0+46i  0+32i  0+25i  0+46i  0+39i  0+36i  0+53i  0+25i  0+39i #>  [8,]  0+32i  0+39i  0+25i  0+18i  0+39i  0+32i  0+25i  0+46i  0+18i  0+32i #>  [9,]  0+61i  0+61i  0+48i  0+39i  0+70i  0+55i  0+46i  0+77i  0+39i  0+55i #> [10,]  0+69i  0+68i  0+60i  0+46i  0+77i  0+61i  0+53i  0+77i  0+46i  0+68i #> [11,] 84+ 0i 91+ 0i 83+ 0i 80+ 0i 90+ 0i 88+ 0i 83+ 0i 94+ 0i 80+ 0i 87+ 0i #> [12,] 91+ 0i 82+ 0i 85+ 0i 78+ 0i 97+ 0i 88+ 0i 82+ 0i 96+ 0i 78+ 0i 87+ 0i #> [13,] 83+ 0i 85+ 0i 78+ 0i 77+ 0i 87+ 0i 83+ 0i 79+ 0i 90+ 0i 77+ 0i 82+ 0i #> [14,] 80+ 0i 78+ 0i 77+ 0i 72+ 0i 83+ 0i 77+ 0i 74+ 0i 82+ 0i 73+ 0i 79+ 0i #> [15,] 90+ 0i 97+ 0i 87+ 0i 83+ 0i 92+ 0i 90+ 0i 87+ 0i 98+ 0i 83+ 0i 92+ 0i #> [16,] 88+ 0i 88+ 0i 83+ 0i 77+ 0i 90+ 0i 78+ 0i 80+ 0i 91+ 0i 77+ 0i 87+ 0i #> [17,] 83+ 0i 82+ 0i 79+ 0i 74+ 0i 87+ 0i 80+ 0i 72+ 0i 87+ 0i 74+ 0i 82+ 0i #> [18,] 94+ 0i 96+ 0i 90+ 0i 82+ 0i 98+ 0i 91+ 0i 87+ 0i 94+ 0i 82+ 0i 96+ 0i #> [19,] 80+ 0i 78+ 0i 77+ 0i 73+ 0i 83+ 0i 77+ 0i 74+ 0i 82+ 0i 72+ 0i 79+ 0i #> [20,] 87+ 0i 87+ 0i 82+ 0i 79+ 0i 92+ 0i 87+ 0i 82+ 0i 96+ 0i 79+ 0i 82+ 0i"},{"path":"https://schochastics.github.io/signnet/reference/count_complex_triangles.html","id":null,"dir":"Reference","previous_headings":"","what":"count complex triangles — count_complex_triangles","title":"count complex triangles — count_complex_triangles","text":"Counts number possible signed triangles (+++),(++-), (+–) (—)","code":""},{"path":"https://schochastics.github.io/signnet/reference/count_complex_triangles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"count complex triangles — count_complex_triangles","text":"","code":"count_complex_triangles(g, attr)"},{"path":"https://schochastics.github.io/signnet/reference/count_complex_triangles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"count complex triangles — count_complex_triangles","text":"g igraph object. attr edge attribute name encodes positive (\"P\"), negative (\"N\") ambivalent (\"\") ties.","code":""},{"path":"https://schochastics.github.io/signnet/reference/count_complex_triangles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"count complex triangles — count_complex_triangles","text":"counts complex triangle types","code":""},{"path":[]},{"path":"https://schochastics.github.io/signnet/reference/count_complex_triangles.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"count complex triangles — count_complex_triangles","text":"David Schoch","code":""},{"path":"https://schochastics.github.io/signnet/reference/count_complex_triangles.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"count complex triangles — count_complex_triangles","text":"","code":"library(igraph) g <- make_full_graph(4) E(g)$type <- c(\"P\", \"N\", \"A\", \"A\", \"P\", \"N\") count_complex_triangles(g, attr = \"type\") #> PPP PPN PNN NNN PPA PNA NNA PAA NAA AAA  #>   0   0   0   0   1   2   1   0   0   0"},{"path":"https://schochastics.github.io/signnet/reference/count_signed_triangles.html","id":null,"dir":"Reference","previous_headings":"","what":"count signed triangles — count_signed_triangles","title":"count signed triangles — count_signed_triangles","text":"Counts number possible signed triangles (+++),(++-), (+–) (—)","code":""},{"path":"https://schochastics.github.io/signnet/reference/count_signed_triangles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"count signed triangles — count_signed_triangles","text":"","code":"count_signed_triangles(g)"},{"path":"https://schochastics.github.io/signnet/reference/count_signed_triangles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"count signed triangles — count_signed_triangles","text":"g igraph object sign edge attribute.","code":""},{"path":"https://schochastics.github.io/signnet/reference/count_signed_triangles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"count signed triangles — count_signed_triangles","text":"counts 4 signed triangle types","code":""},{"path":[]},{"path":"https://schochastics.github.io/signnet/reference/count_signed_triangles.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"count signed triangles — count_signed_triangles","text":"David Schoch","code":""},{"path":"https://schochastics.github.io/signnet/reference/count_signed_triangles.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"count signed triangles — count_signed_triangles","text":"","code":"library(igraph) g <- make_full_graph(4) E(g)$sign <- c(-1, 1, 1, -1, -1, 1) count_signed_triangles(g) #> +++ ++- +-- ---  #>   1   0   3   0"},{"path":"https://schochastics.github.io/signnet/reference/cowList.html","id":null,"dir":"Reference","previous_headings":"","what":"Signed networks from Correlates of War — cowList","title":"Signed networks from Correlates of War — cowList","text":"51 signed networks inter state relations","code":""},{"path":"https://schochastics.github.io/signnet/reference/cowList.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Signed networks from Correlates of War — cowList","text":"","code":"cowList"},{"path":"https://schochastics.github.io/signnet/reference/cowList.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Signed networks from Correlates of War — cowList","text":"List igraph objects","code":""},{"path":"https://schochastics.github.io/signnet/reference/cowList.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Signed networks from Correlates of War — cowList","text":"http://mrvar.fdv.uni-lj.si/pajek/SVG/CoW/default.htm","code":""},{"path":"https://schochastics.github.io/signnet/reference/cowList.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Signed networks from Correlates of War — cowList","text":"Doreian, P. Mrvar, . (2015). \"Structural Balance Signed International Relations\". Journal Social Structure, 16(2)","code":""},{"path":"https://schochastics.github.io/signnet/reference/degree_signed.html","id":null,"dir":"Reference","previous_headings":"","what":"Signed Degree — degree_signed","title":"Signed Degree — degree_signed","text":"several options calculate signed degree vertices","code":""},{"path":"https://schochastics.github.io/signnet/reference/degree_signed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Signed Degree — degree_signed","text":"","code":"degree_signed(   g,   mode = c(\"all\", \"in\", \"out\"),   type = c(\"pos\", \"neg\", \"ratio\", \"net\") )"},{"path":"https://schochastics.github.io/signnet/reference/degree_signed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Signed Degree — degree_signed","text":"g igraph object sign edge attribute. mode character string, “” -degree, “” -degree “” undirected networks. type character string, “pos” “neg” counting positive negative neighbors , \"ratio\" pos/(pos+neg), \"net\" pos-neg.","code":""},{"path":"https://schochastics.github.io/signnet/reference/degree_signed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Signed Degree — degree_signed","text":"centrality scores numeric vector.","code":""},{"path":"https://schochastics.github.io/signnet/reference/degree_signed.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Signed Degree — degree_signed","text":"David Schoch","code":""},{"path":"https://schochastics.github.io/signnet/reference/eigen_centrality_signed.html","id":null,"dir":"Reference","previous_headings":"","what":"Signed Eigenvector centrality — eigen_centrality_signed","title":"Signed Eigenvector centrality — eigen_centrality_signed","text":"returns eigenvector associated dominant eigenvalue adjacency matrix.","code":""},{"path":"https://schochastics.github.io/signnet/reference/eigen_centrality_signed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Signed Eigenvector centrality — eigen_centrality_signed","text":"","code":"eigen_centrality_signed(g, scale = TRUE)"},{"path":"https://schochastics.github.io/signnet/reference/eigen_centrality_signed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Signed Eigenvector centrality — eigen_centrality_signed","text":"g igraph object sign edge attribute. scale Logical scalar, whether scale result maximum score one. scaling used result vector returned eigen().","code":""},{"path":"https://schochastics.github.io/signnet/reference/eigen_centrality_signed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Signed Eigenvector centrality — eigen_centrality_signed","text":"centrality scores numeric vector.","code":""},{"path":"https://schochastics.github.io/signnet/reference/eigen_centrality_signed.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Signed Eigenvector centrality — eigen_centrality_signed","text":"Note , negative values, adjacency matrix may dominant eigenvalue. means clear eigenvector used. addition possible adjacency matrix repeated eigenvalues hence multiple linearly independent eigenvectors. case certain centralities can arbitrarily assigned. function returns error case.","code":""},{"path":"https://schochastics.github.io/signnet/reference/eigen_centrality_signed.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Signed Eigenvector centrality — eigen_centrality_signed","text":"Bonacich, P. Lloyd, P. (2004). \"Calculating Status Negative Relations.\" Social Networks 26 (4): 331–38. Everett, M. Borgatti, S.P. (2014). \"Networks Containing Negative Ties.\" Social Networks 38: 111–20.","code":""},{"path":"https://schochastics.github.io/signnet/reference/eigen_centrality_signed.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Signed Eigenvector centrality — eigen_centrality_signed","text":"David Schoch","code":""},{"path":"https://schochastics.github.io/signnet/reference/eigen_centrality_signed.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Signed Eigenvector centrality — eigen_centrality_signed","text":"","code":"library(igraph) data(\"tribes\") eigen_centrality_signed(tribes) #>  [1] 1.00000000 0.88879594 0.71609511 0.36818769 0.74303157 0.95454966 #>  [7] 0.76017717 0.67100494 0.21063522 0.23890028 0.69639725 0.91352983 #> [13] 0.23390770 0.05855799 0.91193923 0.98724909"},{"path":"https://schochastics.github.io/signnet/reference/frustration_exact.html","id":null,"dir":"Reference","previous_headings":"","what":"Exact frustration index of a signed network — frustration_exact","title":"Exact frustration index of a signed network — frustration_exact","text":"Computes exact frustration index signed network using linear programming","code":""},{"path":"https://schochastics.github.io/signnet/reference/frustration_exact.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Exact frustration index of a signed network — frustration_exact","text":"","code":"frustration_exact(g, ...)"},{"path":"https://schochastics.github.io/signnet/reference/frustration_exact.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Exact frustration index of a signed network — frustration_exact","text":"g signed network ... additional parameters ompr solver","code":""},{"path":"https://schochastics.github.io/signnet/reference/frustration_exact.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Exact frustration index of a signed network — frustration_exact","text":"list containing frustration index bipartition nodes","code":""},{"path":"https://schochastics.github.io/signnet/reference/frustration_exact.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Exact frustration index of a signed network — frustration_exact","text":"frustration index indicates minimum number edges whose removal results balance network. function needs following packages installed: ompr, ompr.roi,ROI, ROI.plugin.glpk. function Implements model Aref et al., 2020","code":""},{"path":"https://schochastics.github.io/signnet/reference/frustration_exact.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Exact frustration index of a signed network — frustration_exact","text":"Aref, Samin, Andrew J. Mason, Mark C. Wilson. \"Computing line index balance using linear programming optimisation.\" Optimization problems graph theory. Springer, Cham, 2018. 65-84. Aref, Samin, Andrew J. Mason, Mark C. Wilson. \"modeling computational study frustration index signed networks.\" Networks 75.1 (2020): 95-110.","code":""},{"path":"https://schochastics.github.io/signnet/reference/frustration_exact.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Exact frustration index of a signed network — frustration_exact","text":"David Schoch","code":""},{"path":"https://schochastics.github.io/signnet/reference/ggblock.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Blockmodel matrix — ggblock","title":"Plot Blockmodel matrix — ggblock","text":"Plot Blockmodel matrix","code":""},{"path":"https://schochastics.github.io/signnet/reference/ggblock.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Blockmodel matrix — ggblock","text":"","code":"ggblock(   g,   blocks = NULL,   cols = NULL,   show_blocks = FALSE,   show_labels = FALSE )"},{"path":"https://schochastics.github.io/signnet/reference/ggblock.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Blockmodel matrix — ggblock","text":"g igraph object sign edge attribute. blocks vector block membership obtained, e.g. signed_blockmodel cols colors used negative positive ties show_blocks logical. block borders displayed? (Default: FALSE) show_labels logical. node labels displayed? (Default: FALSE)","code":""},{"path":"https://schochastics.github.io/signnet/reference/ggblock.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Blockmodel matrix — ggblock","text":"ggplot2 object","code":""},{"path":"https://schochastics.github.io/signnet/reference/ggblock.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot Blockmodel matrix — ggblock","text":"David Schoch","code":""},{"path":"https://schochastics.github.io/signnet/reference/ggblock.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Blockmodel matrix — ggblock","text":"","code":"if (FALSE) { # \\dontrun{ library(igraph) data(\"tribes\") clu <- signed_blockmodel(tribes, k = 3, alpha = 0.5, annealing = TRUE) ggblock(tribes, clu$membership, show_blocks = TRUE, show_labels = TRUE) } # }"},{"path":"https://schochastics.github.io/signnet/reference/ggsigned.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a signed or complex network — ggsigned","title":"Plot a signed or complex network — ggsigned","text":"Plot signed complex network","code":""},{"path":"https://schochastics.github.io/signnet/reference/ggsigned.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a signed or complex network — ggsigned","text":"","code":"ggsigned(g, type = \"signed\", attr = NULL, edge_cols = NULL, weights = FALSE)"},{"path":"https://schochastics.github.io/signnet/reference/ggsigned.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a signed or complex network — ggsigned","text":"g igraph object. Must \"sign\" edge attribute attribute containing \"P\", \"N\", \"\" type character string. either \"signed\" \"complex\" attr character string. edge attribute containing \"P\", \"N\", \"\" type=\"complex\" edge_cols colors used negative positive (ambivalent) ties weights logical. TRUE, weights computed based sign. Defaults FALSE","code":""},{"path":"https://schochastics.github.io/signnet/reference/ggsigned.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot a signed or complex network — ggsigned","text":"ggplot2 object","code":""},{"path":"https://schochastics.github.io/signnet/reference/ggsigned.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot a signed or complex network — ggsigned","text":"rudimentary visualization signed network. fluent 'ggraph', can probably cook something sophisticated. function thus mostly meant give quick overview network.","code":""},{"path":"https://schochastics.github.io/signnet/reference/ggsigned.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot a signed or complex network — ggsigned","text":"David Schoch","code":""},{"path":"https://schochastics.github.io/signnet/reference/graph_circular_signed.html","id":null,"dir":"Reference","previous_headings":"","what":"circular signed graph — graph_circular_signed","title":"circular signed graph — graph_circular_signed","text":"circular graph positive negative edges.","code":""},{"path":"https://schochastics.github.io/signnet/reference/graph_circular_signed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"circular signed graph — graph_circular_signed","text":"","code":"graph_circular_signed(n, r = 1, pos = 0.1, neg = 0.1)"},{"path":"https://schochastics.github.io/signnet/reference/graph_circular_signed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"circular signed graph — graph_circular_signed","text":"n number nodes r radius pos distance fraction positive edges neg distance fraction negative edges","code":""},{"path":"https://schochastics.github.io/signnet/reference/graph_circular_signed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"circular signed graph — graph_circular_signed","text":"igraph graph","code":""},{"path":"https://schochastics.github.io/signnet/reference/graph_circular_signed.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"circular signed graph — graph_circular_signed","text":"David Schoch","code":""},{"path":"https://schochastics.github.io/signnet/reference/graph_circular_signed.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"circular signed graph — graph_circular_signed","text":"","code":"library(igraph) graph_circular_signed(n = 50) #> IGRAPH b4aef78 U--- 50 360 --  #> + attr: x (v/n), y (v/n), sign (e/n) #> + edges from b4aef78: #>   [1] 1-- 2 1-- 4 1-- 5 1-- 6 1-- 9 1--11 1--17 1--24 1--27 1--28 1--29 1--30 #>  [13] 1--33 1--37 1--39 1--43 1--48 1--49 2-- 4 2-- 6 2-- 9 2--11 2--17 2--24 #>  [25] 2--27 2--28 2--29 2--30 2--33 2--37 2--39 2--42 2--43 2--46 2--48 2--49 #>  [37] 3-- 4 3--18 3--19 3--20 3--21 3--22 3--26 3--33 3--34 3--36 3--40 3--41 #>  [49] 3--45 4-- 5 4-- 9 4--15 4--17 4--20 4--27 4--28 4--30 4--33 4--37 4--39 #>  [61] 4--41 4--48 4--49 5-- 6 5-- 9 5--11 5--15 5--17 5--22 5--24 5--27 5--28 #>  [73] 5--30 5--33 5--37 5--39 5--40 5--42 5--43 5--48 5--49 6--11 6--15 6--17 #>  [85] 6--24 6--27 6--28 6--32 6--37 6--39 6--42 6--43 6--46 6--48 6--49 6--50 #> + ... omitted several edges"},{"path":"https://schochastics.github.io/signnet/reference/graph_from_adjacency_matrix_signed.html","id":null,"dir":"Reference","previous_headings":"","what":"Create signed graphs from adjacency matrices — graph_from_adjacency_matrix_signed","title":"Create signed graphs from adjacency matrices — graph_from_adjacency_matrix_signed","text":"Create signed graphs adjacency matrices","code":""},{"path":"https://schochastics.github.io/signnet/reference/graph_from_adjacency_matrix_signed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create signed graphs from adjacency matrices — graph_from_adjacency_matrix_signed","text":"","code":"graph_from_adjacency_matrix_signed(A, mode = \"undirected\", ...)"},{"path":"https://schochastics.github.io/signnet/reference/graph_from_adjacency_matrix_signed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create signed graphs from adjacency matrices — graph_from_adjacency_matrix_signed","text":"square adjacency matrix signed graph mode Character scalar, specifies interpret supplied matrix.  Possible values : directed, undirected ... additional parameters from_adjacency()","code":""},{"path":"https://schochastics.github.io/signnet/reference/graph_from_adjacency_matrix_signed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create signed graphs from adjacency matrices — graph_from_adjacency_matrix_signed","text":"signed network igraph object","code":""},{"path":"https://schochastics.github.io/signnet/reference/graph_from_adjacency_matrix_signed.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create signed graphs from adjacency matrices — graph_from_adjacency_matrix_signed","text":"","code":"A <- matrix(c(0, 1, -1, 1, 0, 1, -1, 1, 0), 3, 3) graph_from_adjacency_matrix_signed(A) #> IGRAPH 0ca59e0 U--- 3 3 --  #> + attr: sign (e/n) #> + edges from 0ca59e0: #> [1] 1--2 1--3 2--3"},{"path":"https://schochastics.github.io/signnet/reference/graph_from_edgelist_signed.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a signed graph from an edgelist matrix — graph_from_edgelist_signed","title":"Create a signed graph from an edgelist matrix — graph_from_edgelist_signed","text":"Create signed graph edgelist matrix","code":""},{"path":"https://schochastics.github.io/signnet/reference/graph_from_edgelist_signed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a signed graph from an edgelist matrix — graph_from_edgelist_signed","text":"","code":"graph_from_edgelist_signed(el, signs, directed = FALSE)"},{"path":"https://schochastics.github.io/signnet/reference/graph_from_edgelist_signed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a signed graph from an edgelist matrix — graph_from_edgelist_signed","text":"el edgelist, two column matrix, character numeric. signs vector indicating sign edges. Entries must 1 -1. directed whether create directed graph.","code":""},{"path":"https://schochastics.github.io/signnet/reference/graph_from_edgelist_signed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a signed graph from an edgelist matrix — graph_from_edgelist_signed","text":"signed network igraph object","code":""},{"path":"https://schochastics.github.io/signnet/reference/graph_from_edgelist_signed.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a signed graph from an edgelist matrix — graph_from_edgelist_signed","text":"","code":"el <- matrix(c(\"foo\", \"bar\", \"bar\", \"foobar\"), ncol = 2, byrow = TRUE) signs <- c(-1, 1) graph_from_edgelist_signed(el, signs) #> IGRAPH 8f58875 UN-- 3 2 --  #> + attr: name (v/c), sign (e/n) #> + edges from 8f58875 (vertex names): #> [1] foo--bar    bar--foobar"},{"path":"https://schochastics.github.io/signnet/reference/is_signed.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if network is a signed network — is_signed","title":"Check if network is a signed network — is_signed","text":"Check network signed network","code":""},{"path":"https://schochastics.github.io/signnet/reference/is_signed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if network is a signed network — is_signed","text":"","code":"is_signed(g)"},{"path":"https://schochastics.github.io/signnet/reference/is_signed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if network is a signed network — is_signed","text":"g igraph object","code":""},{"path":"https://schochastics.github.io/signnet/reference/is_signed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if network is a signed network — is_signed","text":"logical scalar","code":""},{"path":"https://schochastics.github.io/signnet/reference/is_signed.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if network is a signed network — is_signed","text":"","code":"g <- sample_islands_signed(2, 5, 1, 5) is_signed(g) #> [1] TRUE"},{"path":"https://schochastics.github.io/signnet/reference/laplacian_matrix_complex.html","id":null,"dir":"Reference","previous_headings":"","what":"Complex Graph Laplacian — laplacian_matrix_complex","title":"Complex Graph Laplacian — laplacian_matrix_complex","text":"Laplacian signed graph containing ambivalent ties.","code":""},{"path":"https://schochastics.github.io/signnet/reference/laplacian_matrix_complex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Complex Graph Laplacian — laplacian_matrix_complex","text":"","code":"laplacian_matrix_complex(g, attr, norm = FALSE)"},{"path":"https://schochastics.github.io/signnet/reference/laplacian_matrix_complex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Complex Graph Laplacian — laplacian_matrix_complex","text":"g igraph object. attr edge attribute name encodes positive (\"P\"), negative (\"N\") ambivalent (\"\") ties. norm Whether calculate normalized Laplacian. See definitions .","code":""},{"path":"https://schochastics.github.io/signnet/reference/laplacian_matrix_complex.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Complex Graph Laplacian — laplacian_matrix_complex","text":"complex matrix","code":""},{"path":"https://schochastics.github.io/signnet/reference/laplacian_matrix_complex.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Complex Graph Laplacian — laplacian_matrix_complex","text":"See laplacian_matrix igraph details. complex case, D diagonal matrix containing absolute values row sums complex adjacency matrix.","code":""},{"path":[]},{"path":"https://schochastics.github.io/signnet/reference/laplacian_matrix_complex.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Complex Graph Laplacian — laplacian_matrix_complex","text":"David Schoch","code":""},{"path":"https://schochastics.github.io/signnet/reference/laplacian_matrix_signed.html","id":null,"dir":"Reference","previous_headings":"","what":"Signed Graph Laplacian — laplacian_matrix_signed","title":"Signed Graph Laplacian — laplacian_matrix_signed","text":"Laplacian signed graph.","code":""},{"path":"https://schochastics.github.io/signnet/reference/laplacian_matrix_signed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Signed Graph Laplacian — laplacian_matrix_signed","text":"","code":"laplacian_matrix_signed(g, norm = FALSE, sparse = FALSE)"},{"path":"https://schochastics.github.io/signnet/reference/laplacian_matrix_signed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Signed Graph Laplacian — laplacian_matrix_signed","text":"g igraph object sign edge attribute. norm Whether calculate normalized Laplacian. See definitions . sparse Logical scalar, whether return result sparse matrix. Matrix package required sparse matrices.","code":""},{"path":"https://schochastics.github.io/signnet/reference/laplacian_matrix_signed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Signed Graph Laplacian — laplacian_matrix_signed","text":"numeric matrix","code":""},{"path":"https://schochastics.github.io/signnet/reference/laplacian_matrix_signed.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Signed Graph Laplacian — laplacian_matrix_signed","text":"See laplacian_matrix igraph details. signed case, D diagonal matrix containing absolute values row sums signed adjacency matrix.","code":""},{"path":"https://schochastics.github.io/signnet/reference/laplacian_matrix_signed.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Signed Graph Laplacian — laplacian_matrix_signed","text":"David Schoch","code":""},{"path":"https://schochastics.github.io/signnet/reference/laplacian_matrix_signed.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Signed Graph Laplacian — laplacian_matrix_signed","text":"","code":"library(igraph) g <- sample_islands_signed(3, 10, 5 / 10, 1) laplacian_matrix_signed(g) #>       [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11] [,12] [,13] #>  [1,]    6   -1   -1    0    0   -1   -1    0   -1     0     0     0     1 #>  [2,]   -1    6    0   -1    0    0   -1   -1   -1     0     0     0     0 #>  [3,]   -1    0    5    0   -1    0   -1    0   -1    -1     0     0     0 #>  [4,]    0   -1    0    2    0    0    0    0    0    -1     0     0     0 #>  [5,]    0    0   -1    0    3    0    0   -1    0    -1     0     0     0 #>  [6,]   -1    0    0    0    0    4   -1   -1   -1     0     0     0     0 #>  [7,]   -1   -1   -1    0    0   -1    6   -1    0    -1     0     0     0 #>  [8,]    0   -1    0    0   -1   -1   -1    5   -1     0     0     0     0 #>  [9,]   -1   -1   -1    0    0   -1    0   -1    6     0     1     0     0 #> [10,]    0    0   -1   -1   -1    0   -1    0    0     4     0     0     0 #> [11,]    0    0    0    0    0    0    0    0    1     0     7    -1    -1 #> [12,]    0    0    0    0    0    0    0    0    0     0    -1     7    -1 #> [13,]    1    0    0    0    0    0    0    0    0     0    -1    -1     7 #> [14,]    0    0    0    0    0    0    0    0    0     0     0     0    -1 #> [15,]    0    0    0    0    0    0    0    0    0     0    -1     0    -1 #> [16,]    0    0    0    0    0    0    0    0    0     0    -1    -1    -1 #> [17,]    0    0    0    0    0    0    0    0    0     0    -1    -1    -1 #> [18,]    0    0    0    0    0    0    0    0    0     0    -1    -1     0 #> [19,]    0    0    0    0    0    0    0    0    0     0     0    -1     0 #> [20,]    0    0    0    0    0    0    0    0    0     0     0    -1     0 #> [21,]    0    0    0    0    0    0    0    0    0     0     0     0     0 #> [22,]    0    0    0    0    0    0    0    0    0     0     0     0     0 #> [23,]    0    0    0    0    0    0    0    0    0     0     0     0     0 #> [24,]    0    0    0    0    0    0    0    0    0     0     0     0     0 #> [25,]    0    0    0    0    0    0    0    0    0     0     0     0     0 #> [26,]    0    0    0    0    0    0    0    0    0     0     0     0     0 #> [27,]    0    0    0    0    0    0    0    0    0     0     0     0     0 #> [28,]    0    1    0    0    0    0    0    0    0     0     0     0     0 #> [29,]    0    0    0    0    0    0    0    0    0     0     0     0     0 #> [30,]    0    0    0    0    0    0    0    0    0     0     0     0     0 #>       [,14] [,15] [,16] [,17] [,18] [,19] [,20] [,21] [,22] [,23] [,24] [,25] #>  [1,]     0     0     0     0     0     0     0     0     0     0     0     0 #>  [2,]     0     0     0     0     0     0     0     0     0     0     0     0 #>  [3,]     0     0     0     0     0     0     0     0     0     0     0     0 #>  [4,]     0     0     0     0     0     0     0     0     0     0     0     0 #>  [5,]     0     0     0     0     0     0     0     0     0     0     0     0 #>  [6,]     0     0     0     0     0     0     0     0     0     0     0     0 #>  [7,]     0     0     0     0     0     0     0     0     0     0     0     0 #>  [8,]     0     0     0     0     0     0     0     0     0     0     0     0 #>  [9,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [10,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [11,]     0    -1    -1    -1    -1     0     0     0     0     0     0     0 #> [12,]     0     0    -1    -1    -1    -1    -1     0     0     0     0     0 #> [13,]    -1    -1    -1    -1     0     0     0     0     0     0     0     0 #> [14,]     4    -1    -1    -1     0     0     0     0     0     0     0     0 #> [15,]    -1     6     0    -1    -1     0    -1     0     0     0     0     0 #> [16,]    -1     0     5     0     0    -1     0     0     0     0     0     0 #> [17,]    -1    -1     0     6    -1     0     0     0     0     0     0     0 #> [18,]     0    -1     0    -1     4     0     0     0     0     0     0     0 #> [19,]     0     0    -1     0     0     2     0     0     0     0     0     0 #> [20,]     0    -1     0     0     0     0     2     0     0     0     0     0 #> [21,]     0     0     0     0     0     0     0     4     0     0     0    -1 #> [22,]     0     0     0     0     0     0     0     0     2     0    -1     0 #> [23,]     0     0     0     0     0     0     0     0     0     3    -1    -1 #> [24,]     0     0     0     0     0     0     0     0    -1    -1     6    -1 #> [25,]     0     0     0     0     0     0     0    -1     0    -1    -1     4 #> [26,]     0     0     0     0     0     0     0    -1     0     0    -1    -1 #> [27,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [28,]     0     0     0     0     0     0     0    -1     0     0    -1     0 #> [29,]     0     0     0     0     0     0     0    -1     0     0     0     0 #> [30,]     0     0     0     0     0     0     0     0    -1    -1    -1     0 #>       [,26] [,27] [,28] [,29] [,30] #>  [1,]     0     0     0     0     0 #>  [2,]     0     0     1     0     0 #>  [3,]     0     0     0     0     0 #>  [4,]     0     0     0     0     0 #>  [5,]     0     0     0     0     0 #>  [6,]     0     0     0     0     0 #>  [7,]     0     0     0     0     0 #>  [8,]     0     0     0     0     0 #>  [9,]     0     0     0     0     0 #> [10,]     0     0     0     0     0 #> [11,]     0     0     0     0     0 #> [12,]     0     0     0     0     0 #> [13,]     0     0     0     0     0 #> [14,]     0     0     0     0     0 #> [15,]     0     0     0     0     0 #> [16,]     0     0     0     0     0 #> [17,]     0     0     0     0     0 #> [18,]     0     0     0     0     0 #> [19,]     0     0     0     0     0 #> [20,]     0     0     0     0     0 #> [21,]    -1     0    -1    -1     0 #> [22,]     0     0     0     0    -1 #> [23,]     0     0     0     0    -1 #> [24,]    -1     0    -1     0    -1 #> [25,]    -1     0     0     0     0 #> [26,]     6    -1     0    -1    -1 #> [27,]    -1     1     0     0     0 #> [28,]     0     0     4    -1     0 #> [29,]    -1     0    -1     4    -1 #> [30,]    -1     0     0    -1     5 laplacian_matrix_signed(g, norm = TRUE) #>             [,1]       [,2]       [,3]       [,4]       [,5]       [,6] #>  [1,]  1.0000000 -0.1666667 -0.1825742  0.0000000  0.0000000 -0.2041241 #>  [2,] -0.1666667  1.0000000  0.0000000 -0.2886751  0.0000000  0.0000000 #>  [3,] -0.1825742  0.0000000  1.0000000  0.0000000 -0.2581989  0.0000000 #>  [4,]  0.0000000 -0.2886751  0.0000000  1.0000000  0.0000000  0.0000000 #>  [5,]  0.0000000  0.0000000 -0.2581989  0.0000000  1.0000000  0.0000000 #>  [6,] -0.2041241  0.0000000  0.0000000  0.0000000  0.0000000  1.0000000 #>  [7,] -0.1666667 -0.1666667 -0.1825742  0.0000000  0.0000000 -0.2041241 #>  [8,]  0.0000000 -0.1825742  0.0000000  0.0000000 -0.2581989 -0.2236068 #>  [9,] -0.1666667 -0.1666667 -0.1825742  0.0000000  0.0000000 -0.2041241 #> [10,]  0.0000000  0.0000000 -0.2236068 -0.3535534 -0.2886751  0.0000000 #> [11,]  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000 #> [12,]  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000 #> [13,]  0.1543033  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000 #> [14,]  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000 #> [15,]  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000 #> [16,]  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000 #> [17,]  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000 #> [18,]  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000 #> [19,]  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000 #> [20,]  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000 #> [21,]  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000 #> [22,]  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000 #> [23,]  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000 #> [24,]  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000 #> [25,]  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000 #> [26,]  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000 #> [27,]  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000 #> [28,]  0.0000000  0.2041241  0.0000000  0.0000000  0.0000000  0.0000000 #> [29,]  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000 #> [30,]  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000 #>             [,7]       [,8]       [,9]      [,10]      [,11]      [,12] #>  [1,] -0.1666667  0.0000000 -0.1666667  0.0000000  0.0000000  0.0000000 #>  [2,] -0.1666667 -0.1825742 -0.1666667  0.0000000  0.0000000  0.0000000 #>  [3,] -0.1825742  0.0000000 -0.1825742 -0.2236068  0.0000000  0.0000000 #>  [4,]  0.0000000  0.0000000  0.0000000 -0.3535534  0.0000000  0.0000000 #>  [5,]  0.0000000 -0.2581989  0.0000000 -0.2886751  0.0000000  0.0000000 #>  [6,] -0.2041241 -0.2236068 -0.2041241  0.0000000  0.0000000  0.0000000 #>  [7,]  1.0000000 -0.1825742  0.0000000 -0.2041241  0.0000000  0.0000000 #>  [8,] -0.1825742  1.0000000 -0.1825742  0.0000000  0.0000000  0.0000000 #>  [9,]  0.0000000 -0.1825742  1.0000000  0.0000000  0.1543033  0.0000000 #> [10,] -0.2041241  0.0000000  0.0000000  1.0000000  0.0000000  0.0000000 #> [11,]  0.0000000  0.0000000  0.1543033  0.0000000  1.0000000 -0.1428571 #> [12,]  0.0000000  0.0000000  0.0000000  0.0000000 -0.1428571  1.0000000 #> [13,]  0.0000000  0.0000000  0.0000000  0.0000000 -0.1428571 -0.1428571 #> [14,]  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000 #> [15,]  0.0000000  0.0000000  0.0000000  0.0000000 -0.1543033  0.0000000 #> [16,]  0.0000000  0.0000000  0.0000000  0.0000000 -0.1690309 -0.1690309 #> [17,]  0.0000000  0.0000000  0.0000000  0.0000000 -0.1543033 -0.1543033 #> [18,]  0.0000000  0.0000000  0.0000000  0.0000000 -0.1889822 -0.1889822 #> [19,]  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000 -0.2672612 #> [20,]  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000 -0.2672612 #> [21,]  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000 #> [22,]  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000 #> [23,]  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000 #> [24,]  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000 #> [25,]  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000 #> [26,]  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000 #> [27,]  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000 #> [28,]  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000 #> [29,]  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000 #> [30,]  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000 #>            [,13]      [,14]      [,15]      [,16]      [,17]      [,18] #>  [1,]  0.1543033  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000 #>  [2,]  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000 #>  [3,]  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000 #>  [4,]  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000 #>  [5,]  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000 #>  [6,]  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000 #>  [7,]  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000 #>  [8,]  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000 #>  [9,]  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000 #> [10,]  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000 #> [11,] -0.1428571  0.0000000 -0.1543033 -0.1690309 -0.1543033 -0.1889822 #> [12,] -0.1428571  0.0000000  0.0000000 -0.1690309 -0.1543033 -0.1889822 #> [13,]  1.0000000 -0.1889822 -0.1543033 -0.1690309 -0.1543033  0.0000000 #> [14,] -0.1889822  1.0000000 -0.2041241 -0.2236068 -0.2041241  0.0000000 #> [15,] -0.1543033 -0.2041241  1.0000000  0.0000000 -0.1666667 -0.2041241 #> [16,] -0.1690309 -0.2236068  0.0000000  1.0000000  0.0000000  0.0000000 #> [17,] -0.1543033 -0.2041241 -0.1666667  0.0000000  1.0000000 -0.2041241 #> [18,]  0.0000000  0.0000000 -0.2041241  0.0000000 -0.2041241  1.0000000 #> [19,]  0.0000000  0.0000000  0.0000000 -0.3162278  0.0000000  0.0000000 #> [20,]  0.0000000  0.0000000 -0.2886751  0.0000000  0.0000000  0.0000000 #> [21,]  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000 #> [22,]  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000 #> [23,]  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000 #> [24,]  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000 #> [25,]  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000 #> [26,]  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000 #> [27,]  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000 #> [28,]  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000 #> [29,]  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000 #> [30,]  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000 #>            [,19]      [,20]      [,21]      [,22]      [,23]      [,24] #>  [1,]  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000 #>  [2,]  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000 #>  [3,]  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000 #>  [4,]  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000 #>  [5,]  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000 #>  [6,]  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000 #>  [7,]  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000 #>  [8,]  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000 #>  [9,]  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000 #> [10,]  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000 #> [11,]  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000 #> [12,] -0.2672612 -0.2672612  0.0000000  0.0000000  0.0000000  0.0000000 #> [13,]  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000 #> [14,]  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000 #> [15,]  0.0000000 -0.2886751  0.0000000  0.0000000  0.0000000  0.0000000 #> [16,] -0.3162278  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000 #> [17,]  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000 #> [18,]  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000 #> [19,]  1.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000 #> [20,]  0.0000000  1.0000000  0.0000000  0.0000000  0.0000000  0.0000000 #> [21,]  0.0000000  0.0000000  1.0000000  0.0000000  0.0000000  0.0000000 #> [22,]  0.0000000  0.0000000  0.0000000  1.0000000  0.0000000 -0.2886751 #> [23,]  0.0000000  0.0000000  0.0000000  0.0000000  1.0000000 -0.2357023 #> [24,]  0.0000000  0.0000000  0.0000000 -0.2886751 -0.2357023  1.0000000 #> [25,]  0.0000000  0.0000000 -0.2500000  0.0000000 -0.2886751 -0.2041241 #> [26,]  0.0000000  0.0000000 -0.2041241  0.0000000  0.0000000 -0.1666667 #> [27,]  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000 #> [28,]  0.0000000  0.0000000 -0.2500000  0.0000000  0.0000000 -0.2041241 #> [29,]  0.0000000  0.0000000 -0.2500000  0.0000000  0.0000000  0.0000000 #> [30,]  0.0000000  0.0000000  0.0000000 -0.3162278 -0.2581989 -0.1825742 #>            [,25]      [,26]      [,27]      [,28]      [,29]      [,30] #>  [1,]  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000 #>  [2,]  0.0000000  0.0000000  0.0000000  0.2041241  0.0000000  0.0000000 #>  [3,]  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000 #>  [4,]  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000 #>  [5,]  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000 #>  [6,]  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000 #>  [7,]  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000 #>  [8,]  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000 #>  [9,]  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000 #> [10,]  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000 #> [11,]  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000 #> [12,]  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000 #> [13,]  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000 #> [14,]  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000 #> [15,]  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000 #> [16,]  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000 #> [17,]  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000 #> [18,]  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000 #> [19,]  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000 #> [20,]  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000 #> [21,] -0.2500000 -0.2041241  0.0000000 -0.2500000 -0.2500000  0.0000000 #> [22,]  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000 -0.3162278 #> [23,] -0.2886751  0.0000000  0.0000000  0.0000000  0.0000000 -0.2581989 #> [24,] -0.2041241 -0.1666667  0.0000000 -0.2041241  0.0000000 -0.1825742 #> [25,]  1.0000000 -0.2041241  0.0000000  0.0000000  0.0000000  0.0000000 #> [26,] -0.2041241  1.0000000 -0.4082483  0.0000000 -0.2041241 -0.1825742 #> [27,]  0.0000000 -0.4082483  1.0000000  0.0000000  0.0000000  0.0000000 #> [28,]  0.0000000  0.0000000  0.0000000  1.0000000 -0.2500000  0.0000000 #> [29,]  0.0000000 -0.2041241  0.0000000 -0.2500000  1.0000000 -0.2236068 #> [30,]  0.0000000 -0.1825742  0.0000000  0.0000000 -0.2236068  1.0000000"},{"path":"https://schochastics.github.io/signnet/reference/pn_index.html","id":null,"dir":"Reference","previous_headings":"","what":"PN Centrality Index — pn_index","title":"PN Centrality Index — pn_index","text":"centrality index signed networks Everett Borgatti","code":""},{"path":"https://schochastics.github.io/signnet/reference/pn_index.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PN Centrality Index — pn_index","text":"","code":"pn_index(g, mode = c(\"all\", \"in\", \"out\"))"},{"path":"https://schochastics.github.io/signnet/reference/pn_index.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"PN Centrality Index — pn_index","text":"g igraph object sign edge attribute. mode character string, “” -pn, “” -pn “” undirected networks.","code":""},{"path":"https://schochastics.github.io/signnet/reference/pn_index.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"PN Centrality Index — pn_index","text":"centrality scores numeric vector.","code":""},{"path":"https://schochastics.github.io/signnet/reference/pn_index.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"PN Centrality Index — pn_index","text":"Everett, M. Borgatti, S. (2014) Networks containing negative ties. Social Networks 38 111-120","code":""},{"path":"https://schochastics.github.io/signnet/reference/pn_index.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"PN Centrality Index — pn_index","text":"David Schoch","code":""},{"path":"https://schochastics.github.io/signnet/reference/pn_index.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"PN Centrality Index — pn_index","text":"","code":"A <- matrix(c(     0, 1, 0, 1, 0, 0, 0, -1, -1, 0,     1, 0, 1, -1, 1, -1, -1, 0, 0, 0,     0, 1, 0, 1, -1, 0, 0, 0, -1, 0,     1, -1, 1, 0, 1, -1, -1, 0, 0, 0,     0, 1, -1, 1, 0, 1, 0, -1, 0, -1,     0, -1, 0, -1, 1, 0, 1, 0, 1, -1,     0, -1, 0, -1, 0, 1, 0, 1, -1, 1,     -1, 0, 0, 0, -1, 0, 1, 0, 1, 0,     -1, 0, -1, 0, 0, 1, -1, 1, 0, 1,     0, 0, 0, 0, -1, -1, 1, 0, 1, 0 ), 10, 10) g <- graph_from_adjacency_matrix_signed(A,\"undirected\") pn_index(g) #>  [1] 0.9009747 0.8613482 0.9076997 0.8613482 0.8410658 0.8496558 0.8617321 #>  [8] 0.9015909 0.8509848 0.9072930"},{"path":"https://schochastics.github.io/signnet/reference/sample_bipartite_signed.html","id":null,"dir":"Reference","previous_headings":"","what":"Bipartite random signed graphs — sample_bipartite_signed","title":"Bipartite random signed graphs — sample_bipartite_signed","text":"Bipartite random signed graphs","code":""},{"path":"https://schochastics.github.io/signnet/reference/sample_bipartite_signed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bipartite random signed graphs — sample_bipartite_signed","text":"","code":"sample_bipartite_signed(   n1,   n2,   p,   p_neg,   directed = FALSE,   mode = c(\"out\", \"in\", \"all\") )"},{"path":"https://schochastics.github.io/signnet/reference/sample_bipartite_signed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bipartite random signed graphs — sample_bipartite_signed","text":"n1 Integer scalar, number bottom vertices. n2 Integer scalar, number top vertices. p probability drawing edge two arbitrary vertices. p_neg probability drawn edge negative tie directed logical, whether graph directed. defaults FALSE. mode Character scalar, specifies direct edges directed graphs. ‘’, directed edges point bottom vertices top vertices. ‘’, edges point top vertices bottom vertices. ‘’ ‘’ generate mutual edges. argument ‘’, edge direction considered independently mutual edges might generated. argument ignored undirected graphs.","code":""},{"path":"https://schochastics.github.io/signnet/reference/sample_bipartite_signed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bipartite random signed graphs — sample_bipartite_signed","text":"signed bipartite igraph graph.","code":""},{"path":"https://schochastics.github.io/signnet/reference/sample_bipartite_signed.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bipartite random signed graphs — sample_bipartite_signed","text":"","code":"sample_bipartite_signed(10, 10, 0.5, 0.5) #> IGRAPH bec0ea5 U--B 20 51 -- Bipartite Gnp random graph #> + attr: name (g/c), p (g/n), type (v/l), sign (e/n) #> + edges from bec0ea5: #>  [1]  1--11  2--11  3--11  4--11  5--11  8--11  9--11  1--12  5--12  6--12 #> [11] 10--12  1--13  2--13  4--13  7--13 10--13  4--14  5--14  8--14  9--14 #> [21]  1--15  2--15  3--15  4--15  7--15  8--15  9--15  2--16  3--16  4--16 #> [31]  5--16  6--16  7--16  8--16  4--17  6--17  8--17 10--17  4--18  5--18 #> [41]  6--18  7--18  8--18  4--19  5--19  7--19  8--19  9--19  4--20  6--20 #> [51] 10--20"},{"path":"https://schochastics.github.io/signnet/reference/sample_gnp_signed.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate random signed graphs according to the G(n,p) Erdos-Renyi model — sample_gnp_signed","title":"Generate random signed graphs according to the G(n,p) Erdos-Renyi model — sample_gnp_signed","text":"Generate random signed graphs according G(n,p) Erdos-Renyi model","code":""},{"path":"https://schochastics.github.io/signnet/reference/sample_gnp_signed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate random signed graphs according to the G(n,p) Erdos-Renyi model — sample_gnp_signed","text":"","code":"sample_gnp_signed(n, p, p_neg, directed = FALSE, loops = FALSE)"},{"path":"https://schochastics.github.io/signnet/reference/sample_gnp_signed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate random signed graphs according to the G(n,p) Erdos-Renyi model — sample_gnp_signed","text":"n number vertices graph. p probability drawing edge two arbitrary vertices. p_neg probability drawn edge negative tie directed logical, whether graph directed. defaults FALSE. loops logical, whether add loop edges, defaults FALSE.","code":""},{"path":"https://schochastics.github.io/signnet/reference/sample_gnp_signed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate random signed graphs according to the G(n,p) Erdos-Renyi model — sample_gnp_signed","text":"signed igraph graph object","code":""},{"path":"https://schochastics.github.io/signnet/reference/sample_gnp_signed.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Generate random signed graphs according to the G(n,p) Erdos-Renyi model — sample_gnp_signed","text":"Erdos, P. Renyi, ., random graphs, Publicationes Mathematicae 6, 290–297 (1959).","code":""},{"path":"https://schochastics.github.io/signnet/reference/sample_gnp_signed.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate random signed graphs according to the G(n,p) Erdos-Renyi model — sample_gnp_signed","text":"","code":"sample_gnp_signed(10, 0.4, 0.5) #> IGRAPH edc7527 U--- 10 16 -- Erdos-Renyi (gnp) graph #> + attr: name (g/c), type (g/c), loops (g/l), p (g/n), sign (e/n) #> + edges from edc7527: #>  [1] 1-- 3 2-- 3 2-- 4 1-- 5 1-- 6 2-- 6 4-- 6 4-- 7 6-- 7 2-- 8 5-- 8 1-- 9 #> [13] 4-- 9 6--10 7--10 8--10"},{"path":"https://schochastics.github.io/signnet/reference/sample_islands_signed.html","id":null,"dir":"Reference","previous_headings":"","what":"A graph with random subgraphs connected by negative edges — sample_islands_signed","title":"A graph with random subgraphs connected by negative edges — sample_islands_signed","text":"Create number Erdos-Renyi random graphs identical parameters, connect specified number negative ties.","code":""},{"path":"https://schochastics.github.io/signnet/reference/sample_islands_signed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A graph with random subgraphs connected by negative edges — sample_islands_signed","text":"","code":"sample_islands_signed(islands.n, islands.size, islands.pin, n.inter)"},{"path":"https://schochastics.github.io/signnet/reference/sample_islands_signed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A graph with random subgraphs connected by negative edges — sample_islands_signed","text":"islands.n number islands graph. islands.size size islands graph. islands.pin probability intra-island edges. n.inter number negative edges two islands.","code":""},{"path":"https://schochastics.github.io/signnet/reference/sample_islands_signed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A graph with random subgraphs connected by negative edges — sample_islands_signed","text":"signed igraph graph","code":""},{"path":"https://schochastics.github.io/signnet/reference/sample_islands_signed.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"A graph with random subgraphs connected by negative edges — sample_islands_signed","text":"David Schoch","code":""},{"path":"https://schochastics.github.io/signnet/reference/sample_islands_signed.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A graph with random subgraphs connected by negative edges — sample_islands_signed","text":"","code":"library(igraph) sample_islands_signed(3, 10, 0.5, 1) #> IGRAPH 6f87dbe U--- 30 76 --  #> + attr: grp (v/c), sign (e/n) #> + edges from 6f87dbe: #>  [1]  1-- 3  1-- 5  1-- 6  1-- 8  1-- 9  1--10  2-- 3  2-- 7  2-- 8  2-- 9 #> [11]  3-- 4  3-- 5  3-- 9  4-- 5  4-- 8  4-- 9  4--10  5-- 7  5-- 9  6-- 8 #> [21]  6-- 9  7--10  8-- 9 11--12 11--13 11--16 11--17 11--18 11--19 11--20 #> [31] 12--14 12--15 12--16 12--17 13--15 13--17 13--19 14--15 14--17 14--18 #> [41] 14--19 15--16 15--17 15--18 16--18 16--20 17--18 17--20 18--20 21--22 #> [51] 21--25 21--26 21--28 21--30 22--24 22--25 22--29 22--30 23--24 23--26 #> [61] 23--28 23--30 24--26 24--27 24--30 25--26 25--29 25--30 26--30 27--29 #> [71] 27--30 28--29 28--30  1--14  6--16 18--26"},{"path":"https://schochastics.github.io/signnet/reference/signed_blockmodel.html","id":null,"dir":"Reference","previous_headings":"","what":"Blockmodeling for signed networks — signed_blockmodel","title":"Blockmodeling for signed networks — signed_blockmodel","text":"Finds blocks nodes intra-positive inter-negative edges","code":""},{"path":"https://schochastics.github.io/signnet/reference/signed_blockmodel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Blockmodeling for signed networks — signed_blockmodel","text":"","code":"signed_blockmodel(g, k, alpha = 0.5, annealing = FALSE)"},{"path":"https://schochastics.github.io/signnet/reference/signed_blockmodel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Blockmodeling for signed networks — signed_blockmodel","text":"g igraph object sign edge attribute. k number blocks alpha see details annealing logical. TRUE, use simulated annealing (Default: FALSE)","code":""},{"path":"https://schochastics.github.io/signnet/reference/signed_blockmodel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Blockmodeling for signed networks — signed_blockmodel","text":"numeric vector block assignments associated criterion value","code":""},{"path":"https://schochastics.github.io/signnet/reference/signed_blockmodel.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Blockmodeling for signed networks — signed_blockmodel","text":"function minimizes P(C)=\\(\\alpha\\)N+(1-\\(\\alpha\\))P, N total number negative ties within plus-sets P total number positive ties plus-sets. function implements structural balance model. , diagonal blocks positive -diagonal blocks negative. generalized version see signed_blockmodel_general.","code":""},{"path":"https://schochastics.github.io/signnet/reference/signed_blockmodel.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Blockmodeling for signed networks — signed_blockmodel","text":"Doreian, Patrick Andrej Mrvar (2009). Partitioning signed social networks. Social Networks 31(1) 1-11","code":""},{"path":"https://schochastics.github.io/signnet/reference/signed_blockmodel.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Blockmodeling for signed networks — signed_blockmodel","text":"David Schoch","code":""},{"path":"https://schochastics.github.io/signnet/reference/signed_blockmodel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Blockmodeling for signed networks — signed_blockmodel","text":"","code":"library(igraph)  g <- sample_islands_signed(10, 10, 1, 20) clu <- signed_blockmodel(g, k = 10, alpha = 0.5) table(clu$membership) #>  #>  1  2  3  4  5  6  7  8  9 10  #> 10 10 10 10 10 10 10 10 10 10  clu$criterion #> [1] 0  # Using simulated annealing (less change of getting trapped in local optima) data(\"tribes\") clu <- signed_blockmodel(tribes, k = 3, alpha = 0.5, annealing = TRUE) table(clu$membership) #>  #> 1 2 3  #> 5 7 4  clu$criterion #> [1] 2"},{"path":"https://schochastics.github.io/signnet/reference/signed_blockmodel_general.html","id":null,"dir":"Reference","previous_headings":"","what":"Generalized blockmodeling for signed networks — signed_blockmodel_general","title":"Generalized blockmodeling for signed networks — signed_blockmodel_general","text":"Finds blocks nodes specified inter/intra group ties","code":""},{"path":"https://schochastics.github.io/signnet/reference/signed_blockmodel_general.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generalized blockmodeling for signed networks — signed_blockmodel_general","text":"","code":"signed_blockmodel_general(g, blockmat, alpha = 0.5)"},{"path":"https://schochastics.github.io/signnet/reference/signed_blockmodel_general.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generalized blockmodeling for signed networks — signed_blockmodel_general","text":"g igraph object sign edge attribute. blockmat Integer Matrix. Specifies inter/intra group patterns ties alpha see details","code":""},{"path":"https://schochastics.github.io/signnet/reference/signed_blockmodel_general.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generalized blockmodeling for signed networks — signed_blockmodel_general","text":"numeric vector block assignments associated criterion value","code":""},{"path":"https://schochastics.github.io/signnet/reference/signed_blockmodel_general.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generalized blockmodeling for signed networks — signed_blockmodel_general","text":"function minimizes P(C)=\\(\\alpha\\)N+(1-\\(\\alpha\\))P, N total number negative ties within plus-sets P total number positive ties plus-sets. function implements generalized model. structural balance version see signed_blockmodel.","code":""},{"path":"https://schochastics.github.io/signnet/reference/signed_blockmodel_general.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Generalized blockmodeling for signed networks — signed_blockmodel_general","text":"Doreian, Patrick Andrej Mrvar (2009). Partitioning signed social networks. Social Networks 31(1) 1-11","code":""},{"path":"https://schochastics.github.io/signnet/reference/signed_blockmodel_general.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Generalized blockmodeling for signed networks — signed_blockmodel_general","text":"David Schoch","code":""},{"path":"https://schochastics.github.io/signnet/reference/signed_blockmodel_general.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generalized blockmodeling for signed networks — signed_blockmodel_general","text":"","code":"library(igraph) # create a signed network with three groups and different inter/intra group ties g1 <- g2 <- g3 <- make_full_graph(5)  V(g1)$name <- as.character(1:5) V(g2)$name <- as.character(6:10) V(g3)$name <- as.character(11:15)  g <- Reduce(\"%u%\", list(g1, g2, g3)) E(g)$sign <- 1 E(g)$sign[1:10] <- -1 g <- add_edges(g, c(rbind(1:5, 6:10)), attr = list(sign = -1)) g <- add_edges(g, c(rbind(1:5, 11:15)), attr = list(sign = -1)) g <- add_edges(g, c(rbind(11:15, 6:10)), attr = list(sign = 1))  # specify the link patterns between groups blockmat <- matrix(c(1, -1, -1, -1, 1, 1, -1, 1, -1), 3, 3, byrow = TRUE) signed_blockmodel_general(g, blockmat, 0.5) #> $membership #>  [1] 1 1 1 1 1 2 2 2 2 2 3 3 3 3 3 #>  #> $criterion #> [1] 0 #>"},{"path":"https://schochastics.github.io/signnet/reference/signed_triangles.html","id":null,"dir":"Reference","previous_headings":"","what":"list signed triangles — signed_triangles","title":"list signed triangles — signed_triangles","text":"lists possible signed triangles","code":""},{"path":"https://schochastics.github.io/signnet/reference/signed_triangles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"list signed triangles — signed_triangles","text":"","code":"signed_triangles(g)"},{"path":"https://schochastics.github.io/signnet/reference/signed_triangles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"list signed triangles — signed_triangles","text":"g igraph object sign edge attribute.","code":""},{"path":"https://schochastics.github.io/signnet/reference/signed_triangles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"list signed triangles — signed_triangles","text":"matrix vertex ids number positive ties per triangle","code":""},{"path":[]},{"path":"https://schochastics.github.io/signnet/reference/signed_triangles.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"list signed triangles — signed_triangles","text":"David Schoch","code":""},{"path":"https://schochastics.github.io/signnet/reference/signed_triangles.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"list signed triangles — signed_triangles","text":"","code":"library(igraph) g <- make_full_graph(4) E(g)$sign <- c(-1, 1, 1, -1, -1, 1) signed_triangles(g) #>      V1 V2 V3 P #> [1,]  1  2  4 1 #> [2,]  1  2  3 1 #> [3,]  1  3  4 3 #> [4,]  2  3  4 1"},{"path":"https://schochastics.github.io/signnet/reference/triad_census_signed.html","id":null,"dir":"Reference","previous_headings":"","what":"signed triad census — triad_census_signed","title":"signed triad census — triad_census_signed","text":"triad census signed graphs","code":""},{"path":"https://schochastics.github.io/signnet/reference/triad_census_signed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"signed triad census — triad_census_signed","text":"","code":"triad_census_signed(g)"},{"path":"https://schochastics.github.io/signnet/reference/triad_census_signed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"signed triad census — triad_census_signed","text":"g igraph object sign edge attribute.","code":""},{"path":"https://schochastics.github.io/signnet/reference/triad_census_signed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"signed triad census — triad_census_signed","text":"counts 139 signed directed triangle types","code":""},{"path":"https://schochastics.github.io/signnet/reference/triad_census_signed.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"signed triad census — triad_census_signed","text":"David Schoch","code":""},{"path":"https://schochastics.github.io/signnet/reference/triad_census_signed.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"signed triad census — triad_census_signed","text":"","code":"library(igraph) g <- make_full_graph(4, directed = TRUE) E(g)$sign <- rep(c(-1, 1, 1, -1, -1, 1), 2) triad_census_signed(g) #>  003-000000  012-0000P0  012-0000N0 021D-P0P000 021D-N0N000 021D-N0P000  #>           0           0           0           0           0           0  #> 021C-0PP000 030C-N00PP0 030C-N00PN0 030C-N00NN0 021U-0P0P00 021U-0N0P00  #>           0           0           0           0           0           0  #> 021U-0N0N00 120C-0NN0NP 120C-0NN0NN 111U-0P00PP 111U-0P00PN 120C-0PN0NP  #>           0           0           0           0           0           0  #> 120C-0NP0PN 120C-0NP0PP 120C-0NN0PP 120C-0PN0NN 120C-0NP0NN 120C-0NP0NP  #>           0           0           0           0           0           0  #> 120C-0NN0PN 021C-0PN000 021C-0NP000 021C-0NN000 111D-N000PP 111D-N000NN  #>           0           0           0           0           0           0  #> 111D-N000NP  102-0000NN 111D-N000PN  102-0000NP  102-0000PP 030T-0P0PP0  #>           0           0           0           0           0           0  #> 030T-0P0PN0 030T-0N0PP0 030T-0P0NN0 030T-0N0NN0 030T-0P0NP0 030T-0N0NP0  #>           0           0           0           0           0           0  #> 030T-0N0PN0 030C-P00PP0  201-00PPPP  201-00NPPN  201-00NPPP 120U-0P0PPP  #>           0           0           0           0           0           0  #>  201-00PNPN  201-00NNNN  201-00NNNP 120U-0N0PPN  201-00PNPP  201-00NNPN  #>           0           0           0           0           0           0  #>  201-00NNPP 120U-0N0PPP  201-00NPNP 120U-0P0PNN 120U-0P0PNP 120U-0N0PNP  #>           0           0           0           0           0           0  #> 120U-0N0PNN 120U-0N0NNP 120D-P0P0NN 120U-0N0NPP 120D-P0P0NP 120D-N0P0PP  #>           0           0           0           0           0           0  #> 120D-P0P0PP 120U-0N0NNN 120D-P0N0NP 120D-N0P0NP 120D-N0P0NN 120D-N0N0NP  #>           0           0           0           0           0           0  #> 120C-0PP0NP 120D-N0N0PP 120C-0PP0PN 120C-0PP0PP 120C-0PN0PP 120D-N0N0NN  #>           0           0           0           0           0           0  #> 120C-0PP0NN 120C-0PN0PN 111U-0P00NP 111U-0N00PP 111U-0P00NN 111D-P000PP  #>           0           0           0           0           0           0  #> 111U-0N00NN 111U-0N00NP 111D-P000NP 111U-0N00PN 111D-P000PN 111D-P000NN  #>           0           0           0           0           0           0  #>  210-PPP0PP  210-PPN0PN  210-PPN0PP  210-PNN0NN  210-PPP0NN  210-PNN0NP  #>           0           0           0           0           0           0  #>  210-PNN0PN  210-NNP0PN  210-PPP0NP  210-PNN0PP  210-PNP0NN  210-NNP0PP  #>           0           0           0           0           0           0  #>  210-PNP0NP  210-NPN0NN  210-NPN0NP  210-NNN0NP  210-PPP0PN  210-PNP0PN  #>           0           0           0           0           0           0  #>  210-PNP0PP  210-NPN0PN  210-PPN0NN  210-NPN0PP  210-NPP0NN  210-NNN0PN  #>           0           0           0           0           0           0  #>  210-PPN0NP  210-NPP0NP  210-NPP0PN  210-NNN0PP  210-NPP0PP  210-NNP0NN  #>           0           0           0           0           0           0  #>  210-NNP0NP  210-NNN0NN  300-PPPPPP  300-PPNPNP  300-NPNPPP  300-NPPPPP  #>           0           0           0           1           0           0  #>  300-PNNPPN  300-NNPNPP  300-NNPPPP  300-NNNNPP  300-PNNPPP  300-NPNPNN  #>           0           0           0           0           1           1  #>  300-NNNPNP  300-NNNNNP  300-NPNPNP  300-NNNPPN  300-NNNPPP  300-NNNNNN  #>           0           0           0           1           0           0"},{"path":"https://schochastics.github.io/signnet/reference/tribes.html","id":null,"dir":"Reference","previous_headings":"","what":"Signed network of New Guinean highland tribes — tribes","title":"Signed network of New Guinean highland tribes — tribes","text":"Signed social network tribes Gahuku–Gama alliance structure Eastern Central Highlands New Guinea, Kenneth Read. network contains sixteen tribes connected friendship (\"rova\") enmity (\"hina\").","code":""},{"path":"https://schochastics.github.io/signnet/reference/tribes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Signed network of New Guinean highland tribes — tribes","text":"","code":"tribes"},{"path":"https://schochastics.github.io/signnet/reference/tribes.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Signed network of New Guinean highland tribes — tribes","text":"igraph object","code":""},{"path":"https://schochastics.github.io/signnet/reference/tribes.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Signed network of New Guinean highland tribes — tribes","text":"http://vlado.fmf.uni-lj.si/pub/networks/data/ucinet/gama.dat","code":""},{"path":"https://schochastics.github.io/signnet/reference/tribes.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Signed network of New Guinean highland tribes — tribes","text":"Read, K. E. (1954) Cultures central highlands, New Guinea. Southwestern Journal Anthropology, 1–43.","code":""},{"path":"https://schochastics.github.io/signnet/news/index.html","id":"signnet-105","dir":"Changelog","previous_headings":"","what":"signnet 1.0.5","title":"signnet 1.0.5","text":"CRAN release: 2025-02-05 fix deprecated igrapg calls","code":""},{"path":"https://schochastics.github.io/signnet/news/index.html","id":"signnet-104","dir":"Changelog","previous_headings":"","what":"signnet 1.0.4","title":"signnet 1.0.4","text":"CRAN release: 2024-01-08 fix deprecated support adjacency matrices character values #26","code":""},{"path":"https://schochastics.github.io/signnet/news/index.html","id":"signnet-103","dir":"Changelog","previous_headings":"","what":"signnet 1.0.3","title":"signnet 1.0.3","text":"CRAN release: 2023-12-15 code refactoring tests #17 removed deprecated calls aes_ #23","code":""},{"path":"https://schochastics.github.io/signnet/news/index.html","id":"signnet-102","dir":"Changelog","previous_headings":"","what":"signnet 1.0.2","title":"signnet 1.0.2","text":"CRAN release: 2023-09-08 fixed bug signed_triangles() resulted wrong vertex ids (#20)","code":""},{"path":"https://schochastics.github.io/signnet/news/index.html","id":"signnet-101","dir":"Changelog","previous_headings":"","what":"signnet 1.0.1","title":"signnet 1.0.1","text":"CRAN release: 2023-01-27 fixed error occurs new version igraph (https://github.com/igraph/rigraph/pull/633)","code":""},{"path":"https://schochastics.github.io/signnet/news/index.html","id":"signnet-100","dir":"Changelog","previous_headings":"","what":"signnet 1.0.0","title":"signnet 1.0.0","text":"CRAN release: 2022-12-22 added code conduct added contributing guide added frustration_exact() vignette added utility functions is_signed,graph_from_adjacency_matrix_signed, graph_from_edgelist_signed() added random graph models sample_gnp_signed(), sample_bipartite_signed()","code":""},{"path":"https://schochastics.github.io/signnet/news/index.html","id":"signnet-081","dir":"Changelog","previous_headings":"","what":"signnet 0.8.1","title":"signnet 0.8.1","text":"CRAN release: 2022-10-18 fixed existing check errors","code":""},{"path":"https://schochastics.github.io/signnet/news/index.html","id":"signnet-080","dir":"Changelog","previous_headings":"","what":"signnet 0.8.0","title":"signnet 0.8.0","text":"CRAN release: 2022-02-13 added frustration_exact() compute exact number frustrated edges fixed issue aggregate r-devel","code":""},{"path":"https://schochastics.github.io/signnet/news/index.html","id":"signnet-071","dir":"Changelog","previous_headings":"","what":"signnet 0.7.1","title":"signnet 0.7.1","text":"CRAN release: 2021-04-28 fixed #7 fixed copy paste error as_unsigned_2mode() fixed aggregate error as_signed_proj()","code":""},{"path":"https://schochastics.github.io/signnet/news/index.html","id":"signnet-070","dir":"Changelog","previous_headings":"","what":"signnet 0.7.0","title":"signnet 0.7.0","text":"CRAN release: 2020-10-21 added triad_census_signed()","code":""},{"path":"https://schochastics.github.io/signnet/news/index.html","id":"signnet-060","dir":"Changelog","previous_headings":"","what":"signnet 0.6.0","title":"signnet 0.6.0","text":"CRAN release: 2020-08-13 added avatar dataset speed blockmodeling larger networks","code":""},{"path":"https://schochastics.github.io/signnet/news/index.html","id":"signnet-053","dir":"Changelog","previous_headings":"","what":"signnet 0.5.3","title":"signnet 0.5.3","text":"CRAN release: 2020-06-30 fixed issue complex_walks() fixed faulty calculation directed pn_index()","code":""},{"path":"https://schochastics.github.io/signnet/news/index.html","id":"signnet-052","dir":"Changelog","previous_headings":"","what":"signnet 0.5.2","title":"signnet 0.5.2","text":"CRAN release: 2020-03-04 fixed stringsAsFactors issue complex_matrices.R","code":""},{"path":"https://schochastics.github.io/signnet/news/index.html","id":"signnet-051","dir":"Changelog","previous_headings":"","what":"signnet 0.5.1","title":"signnet 0.5.1","text":"CRAN release: 2020-02-04 fixed C++ issue circular arc graphs fixed failing eigen centrality test","code":""},{"path":"https://schochastics.github.io/signnet/news/index.html","id":"signnet-050","dir":"Changelog","previous_headings":"","what":"signnet 0.5.0","title":"signnet 0.5.0","text":"CRAN release: 2020-01-24 added vignettes tests","code":""},{"path":"https://schochastics.github.io/signnet/news/index.html","id":"signnet-010","dir":"Changelog","previous_headings":"","what":"signnet 0.1.0","title":"signnet 0.1.0","text":"initial version","code":""}]
